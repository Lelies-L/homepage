[{
  "userId": 257,
  "anchor": "apachedolphinscheduler",
  "slide": "",
  "video": "",
  "img": "dolphin.jpg",
  "title": "Apache DolphinScheduler||Apache DolphinScheduler Community",
  "project_url": "",
  "url": "https://dolphinscheduler.apache.org/zh-cn/index.html",
  "description": "Apache DolphinScheduler 是一款分布式易扩展的可视化 DAG 工作流任务调度系统。",
  "full_des": "Apache DolphinScheduler 是一个分布式去中心化，易扩展的可视化 DAG 工作流任务调度系统。致力于解决数据处理流程中复杂的任务依赖关系，使各种任务类型(Spark /Flink/MR/Shell/Python/SQL等)在工作流编排中开箱即用。",
  "tech_tag": ["Java", "JavaScript", "Distributed System"],
  "domain_tag": ["Big Data", "Distributed System", "Workflow"],
  "mail_list": "dev@dolphinscheduler.apache.org",
  "email": "dev@dolphinscheduler.apache.org",
  "project_list": []
},
{
  "userId": 163,
  "anchor": "apacheshardingsphere",
  "slide": "",
  "video": "",
  "img": "apacheshardingsphere.jpg",
  "title": "Apache ShardingSphere||Apache ShardingSphere",
  "project_url": "",
  "url": "http://shardingsphere.apache.org/index_zh.html",
  "description": "Apache ShardingSphere是一个开源的分布式数据库解决方案组成的生态圈||Apache ShardingSphere is an open-source ecosystem consisting of a set of distributed database solutions.",
  "full_des": "Apache ShardingSphere是一个开源的分布式数据库解决方案组成的生态圈，提供标准化的数据水平扩展、分布式事务和分布式治理等功能。||Apache ShardingSphere is an open-source ecosystem consisting of distributed database solutions, which provide functions of data scale-out, distributed transaction and distributed governance. As a TLP of Apache, its community is active, diverse, open and technique-geeky.",
  "tech_tag": ["Java", "Database", "Docker"],
  "domain_tag": ["Big Data", "Distributed System", "Programming Language"],
  "mail_list": "dev@shardingsphere.apache.org",
  "email": "dev@shardingsphere.apache.org",
  "project_list": [{
    "name": "场景整合测试",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "潘娟",
    "contact": "<panjuan@apache.org>",
    "student_count": 0,
    "description": "根据应用场景和SharidngSphere特性平台，增加覆盖多种场景，多样化SQL的整合测试",
    "update_time": "2021-04-20 18:09:26",
    "label": "210090022",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Database"],
    "domain_tag": ["Big Data", "Distributed System"],
    "outputRequirement": ["增加分片场景中孤立表的DML/DDL/DAL的SQL整合测试", "增加RDL的整合测试", "增加DDL/DML+治理功能的整合测试", "增加DAL的整合测试", "增加权限控制的整合测试", "增加对PostgreSQL数据库的Proxy端接入测试"],
    "techRequirement": ["熟悉JAVA编程语言", "熟悉脱敏/分片/读写分离场景", "熟悉zookeeper", "熟悉Junit", "熟悉MySQL基本使用", "熟悉PostgreSQL基本使用"],
    "orgID": 9,
    "isApproved": 1
  }, {
    "name": "shardingsphere-Agent 新增OpenTelemetry插件",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "肖宇",
    "contact": "<xiaoyu@apache.org>",
    "student_count": 0,
    "description": "根据目前Agent的架构，新增相关的API，SPI接口的实现，将mertics信息与OpenTelemetry进行对接",
    "update_time": "2021-04-20 18:09:02",
    "label": "210090023",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Database"],
    "domain_tag": ["Big Data", "Programming Language"],
    "outputRequirement": ["完成OpenTelemetry插件的开发", "完成单元测试", "新增OpenTelemetry插件的集成测试"],
    "techRequirement": ["熟练使用 Java 编程语言", "了解Java SPI机制", "了解Java agent机制", "了解bytebuddy字节码工具"],
    "orgID": 9,
    "isApproved": 1
  }, {
    "name": "提升SQLServer DCL, TCL, DAL语法兼容度",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "董宗磊",
    "contact": "<dongzonglei@apache.org>",
    "student_count": 0,
    "description": "参考SQLServer数据库的SQL语法，完善Sharding Parser模块有关SQLServer的语法定义",
    "update_time": "2021-04-20 18:08:33",
    "label": "210090024",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Database"],
    "domain_tag": ["Big Data", "Distributed System"],
    "outputRequirement": ["符合ShardingSphere SQL语法定义风格", "依据SQLServer官网的DCL SQL语法定义，校对Sharding Parser的语法定义", "依据SQLServer官网的TCL SQL语法定义，校对Sharding Parser的语法定义", "依据SQLServer官网的DAL SQL语法定义，校对Sharding Parser的语法定义"],
    "techRequirement": ["能够使用Java编程语言", "熟悉正则表达式", "了解Antlr基本运行原理", "了解如何编写Antlr的g4语法文件"],
    "orgID": 9,
    "isApproved": 1
  }, {
    "name": "提升SQLServer DDL语法兼容度",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "陆敬尚",
    "contact": "<lujingshang@apache.org>",
    "student_count": 0,
    "description": "参考SQLServer数据库的SQL语法，完善Sharding Parser模块有关SQLServer DDL的语法定义",
    "update_time": "2021-04-20 18:08:47",
    "label": "210090025",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Database"],
    "domain_tag": ["Big Data", "Distributed System"],
    "outputRequirement": ["符合ShardingSphere SQL语法定义风格", "依据SQLServer官网的SQL语法定义，校对Sharding Parser DDL的语法定义"],
    "techRequirement": ["能够使用Java编程语言", "熟悉正则表达式", "了解Antlr基本运行原理", "了解如何编写Antlr的g4语法文件"],
    "orgID": 9,
    "isApproved": 1
  }, {
    "name": "导出Sharding-Proxy 配置文件",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "孟浩然",
    "contact": "<menghaoran@apache.org>",
    "student_count": 0,
    "description": "分布式治理环境下，实现导出Sharding-Proxy配置文件功能",
    "update_time": "2021-04-20 18:09:10",
    "label": "210090026",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Database"],
    "domain_tag": ["Big Data", "Distributed System"],
    "outputRequirement": ["实现项目功能", "完成对应代码单测"],
    "techRequirement": ["熟练使用 Java 编程语言", "了解Zookeeper的基本使用"],
    "orgID": 9,
    "isApproved": 1
  }, {
    "name": "通过 Github Actions 实现标准流程自动化",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "欧阳文",
    "contact": "<ouyangwen@apache.org>",
    "student_count": 0,
    "description": "通过 Github Actions 实现标准流程自动化",
    "update_time": "2021-04-20 18:09:19",
    "label": "210090027",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Database"],
    "domain_tag": ["Big Data", "Distributed System"],
    "outputRequirement": ["发布版本时，自动部署文档到 ShardingSphere-doc 仓库", "发布版本时，自动发布镜像到 Registry", "自动化 issue 标准处理流程"],
    "techRequirement": ["熟悉 Git、Github", "熟悉 Github Actions"],
    "orgID": 9,
    "isApproved": 1
  }]
},
{
  "anchor": "chubaofs",
  "slide": "",
  "video": "",
  "img": "chubao.jpg",
  "title": "ChubaoFS||ChubaoFS",
  "project_url": "",
  "url": "https://github.com/chubaofs/chubaofs",
  "description": "云原生分布式存储平台。||ChubaoFS is a cloud-native storage platform that provides both POSIX filesystem and S3 compatible interfaces.",
  "full_des": "解决了大规模容器平台环境统一存储资源，从而大幅度降低企业在线和离线业务的存储使用和管理成本，并支撑业务存储计算分离架构的实现；融合存储接口: S3接口和posix无缝兼容，使得业务更加方便；多租户: 通过技术创新，使得业务逻辑隔离，但是存储资源聚合在一起，更进一步节约资源；弹性可扩展: 实现一键扩容；小文件优化：针对小文件，在capacity和performance方面都有很好的可扩展性；支撑高并发元数据操作：元数据分片策略没有采用很多业界分布式文件系统采用的Locality策略，而是完全分散，最大限度降低了热点问题概率，高并发的元数据操作性能有保障。||ChubaoFS has been commonly used as the underlying storage infrastructure for online applications, database or data processing services and machine learning jobs orchestrated by Kubernetes. An advantage of doing so is to separate storage from compute with the ability of scaling up and down based on workloads, providing total flexibility in matching resources to the actual storage and compute needs at any given time.Some of the key features include: scaled metadata management and performance; friendly to diverse file sizes and read/write patterns; easy to scale up; multi-tenancy; strong replication consistency.",
  "tech_tag": [
    "云原生分布式存储"
  ],
  "domain_tag": [
    "云原生分布式存储"
  ],
  "mail_list": "chubaofs-users@groups.io",
  "email": "chubaofs-users@groups.io",
  "project_list": []
},
{
  "userId": 147,
  "anchor": "megengine",
  "slide": "",
  "video": "",
  "img": "megengine1.jpg",
  "title": "MegEngine（天元）",
  "orgTypeDesc": "开源社区",
  "orgType": 1,
  "project_url": "",
  "url": "https://megengine.org.cn/",
  "description": "适合工业级研发的开源深度学习框架",
  "full_des": "MegEngine 是一个快速、可拓展、易于使用且支持自动求导的开源深度学习框架。拥有三大核心优势：训练推理一体、全平台高效支持、动静结合的训练能力。",
  "tech_tag": ["Python", "Deep Learning Framework", "深度学习，卷积神经网络，视觉算法"],
  "domain_tag": ["AI", "机器学习"],
  "mail_list": "megengine-support@megvii.com",
  "email": "megengine@megvii.com",
  "project_list": [{
    "name": "添加 RNN/LSTM 系列算子",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "陈振寰",
    "contact": "<chenzhenhuan@megvii.com>",
    "student_count": 0,
    "description": "目前 MegEngine 对于 NLP 相关接口的支持比较少，较为经典的 RNN/LSTM 算子没有提供支持，希望能在 MegEngine 中提供支持",
    "update_time": "2021-04-20 19:11:15",
    "label": "210040013",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python", "AI", "C++", "pytorch"],
    "domain_tag": ["AI"],
    "outputRequirement": ["在 MegEngine python 接口层面添加 RNN/LSTM 算子", "参考内部文档在 c++层面实现 RNN/LSTMCell 算子，改进上层 python 接口，并达到与 pytorch 接近的性能"],
    "techRequirement": ["python、pytorch、C++"],
    "orgID": 4,
    "isApproved": 1
  }, {
    "name": "x86 中添加并优化 local",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "陈其友",
    "contact": "<chenqiyou@megvii.com>",
    "student_count": 0,
    "description": "目前 MegEngine 中 naive 和 CUDA 中支持了 local 和 local share 算子，但是 x86 中并没有支持，因此这些算子在 x86 上运行只能使用 naive 的算子，速度很慢",
    "update_time": "2021-04-20 19:10:31",
    "label": "210040014",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["C++", "性能优化"],
    "domain_tag": ["AI"],
    "outputRequirement": ["在 x86 backend 下面完成 local 算子填加", "算子计算结果和 naive 在所有 case 下结果完全一致", "优化算子，使其逼近最佳性能"],
    "techRequirement": ["C++，性能优化"],
    "orgID": 4,
    "isApproved": 1
  }, {
    "name": "x86 中添加并优化 local share 算子",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "陈其友",
    "contact": "<chenqiyou@megvii.com>",
    "student_count": 0,
    "description": "目前 MegEngine 中 naive 和 CUDA 中支持了 local 和 local share 算子，但是 x86 中并没有支持，因此这些算子在 x86 上运行只能使用 naive 的算子，速度很慢",
    "update_time": "2021-04-20 19:09:54",
    "label": "210040015",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["C++", "性能优化"],
    "domain_tag": ["AI"],
    "outputRequirement": ["在 x86 backend 下面完成 local share 算子填加", "算子计算结果和 naive 在所有 case 下结果完全一致", "benchmark 并优化算子，使其逼近最佳性能"],
    "techRequirement": ["C++，性能优化"],
    "orgID": 4,
    "isApproved": 1
  }, {
    "name": "python whl 支持 Android (限定在主流的 ARM)",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "张浩龙",
    "contact": "<zhanghaolong@megvii.com>",
    "student_count": 0,
    "description": "在 Android arm 上，可用 MegEngine python",
    "update_time": "2021-04-20 19:10:11",
    "label": "210040019",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["C++", "Android"],
    "domain_tag": ["AI"],
    "outputRequirement": ["在 Android aarch64 上(termux 环境)，可用 MegEngine python", "L0: NDK-x86 linux cross build aarch64 Android 编译通过", "L1: 包具备分发性，可安装到其他 aarch64+ Android 上，且能运行", "L2: 能在基于 aarch64 + Android + termux 训练一个小模型"],
    "techRequirement": ["c++, 编译， Android"],
    "orgID": 4,
    "isApproved": 1
  }, {
    "name": "模型转换：ONNX 转 MegEngine",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "熊鹏",
    "contact": "<xiongpeng@megvii.com>",
    "student_count": 0,
    "description": "- 背景：目前官方的 mgeconvert 仓库里面只提供了 MegEngine 模型转到其他框架的功能，反过来不行。\r\n- 目标：完成 ONNX 模型到 MegEngine 的转换。\r\n\r\n  - 支持选择 ONNX/MegEngine 版本\r\n  - 转换并 dump 出 cpp model（可以用 MegEngine op graph 建图并 dump）\r\n  - 只支持推理，不支持训练。",
    "update_time": "2021-04-20 19:09:30",
    "label": "210040020",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python", "ONNX"],
    "domain_tag": ["AI"],
    "outputRequirement": ["转换能力需覆盖 model hub 里的模型", "方案：完成 ONNX 模型的解析，实现 ONNX 与 MGE 各类算子的转换，根据 ONNX 模型中包含的算子搭建出完整的 MGE 模型", "实现效果：转换出来的模型可以完成推理。  - L0：在特定版本上实现模型的转换 - L1：实现不同版本 ONNX 到 MGE 的转换"],
    "techRequirement": ["Python、ONNX"],
    "orgID": 4,
    "isApproved": 1
  }, {
    "name": "一个对用户友好的 web profile 工具",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "柳俊杰",
    "contact": "<liujunjie@megvii.com>",
    "student_count": 0,
    "description": "在 web 上提交 mge 模型，后端执行并反馈 profile 细节",
    "update_time": "2021-04-20 19:10:21",
    "label": "210040021",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python", "JavaScript", "C++", "html"],
    "domain_tag": ["AI"],
    "outputRequirement": ["一个对用户友好的 web profile 工具", "C/S 结构，前端负责收集模型、可视化、打印 profile 结果", "后端负责实际跑模型，后端的支持可以覆盖 x86/cuda/arm 等", "L0: 前端能提交 mge 模型，打印模型的执行延迟。  后端支持 X86，能接受前端的模型并反馈延迟结果  后端的执行可以包装 load_and_run", "L1: 前端支持打印 profile 结果，后端反馈 profile 结果  后端的 profile 可以直接返回 load_and_run 的 profile json 结果，并提供过滤、排序、聚合等操作", "L2: 前端支持模型结构预览，并可视化每层的耗时", "L3: 扩展后端范围，包括 cuda/arm。方便没有设备的用户能直接得到性能数据"],
    "techRequirement": ["html/js/c++/python"],
    "orgID": 4,
    "isApproved": 1
  }]
},
{
  "userId": 209,
  "orgId": 18,
  "anchor": "rtthread",
  "slide": "",
  "video": "",
  "img": "rtthread.jpg",
  "title": "RT-Thread —— 小而美的物联网操作系统||RT",
  "project_url": "",
  "url": "https://www.rt-thread.org/",
  "description": "RT-Thread 是一个组件完整丰富、高度可伸缩、简易开发、超低功耗、高安全性的物联网操作系统。||RT-Thread is an open-source Internet of Things Operating System built with rich components, ultra low power design, high scalability and security, making IoT development easier to start!",
  "full_des": "RT-Thread 是一个集实时操作系统（RTOS）内核、中间件组件和开发者社区于一体的技术平台，由熊谱翔先生带领并集合开源社区力量开发而成，RT-Thread  也是一个组件完整丰富、高度可伸缩、简易开发、超低功耗、高安全性的物联网操作系统。RT-Thread 具备一个 IoT OS  平台所需的所有关键组件，例如GUI、网络协议栈、安全传输、低功耗组件等等。经过15年的累积发展，RT-Thread  已经拥有一个国内最大的嵌入式开源社区，同时被广泛应用于能源、车载、医疗、消费电子等多个行业，累积装机量超过8亿台，成为国人自主开发、国内最成熟稳定和装机量最大的开源 RTOS。||RT-Thread is a technology platform that combines real-time operating system (RTOS) kernel, middleware components, and brings the technology advocates together. RT-Thread is leading by Bernard Xiong and community powered. RT-Thread Internet of Things Operating System built with rich components, ultra-low power design, high scalability and security, with almost every key basic component required for IoT devices, such as network protocols, file systems, low-power management, and so on.     We’ve been here for more than 15 years, and we’re not doing it alone. RT-Thread grows one of the largest open-source embedded communities in China. RT-Thread has now achieved the installation of over 800 million devices, is widely being applied in Wearable Devices, Smart Home Appliances, Energy, Automotive Electronics, Medical Electronics, Consumer Electronics, and many other industries.     RT-Thread strives to create a New Class of IoT operating system with great hardware and software ecosystem, get everything connected, keep information flowing!",
  "tech_tag": ["C", "AI", "RTOS", "Rust", "IoT"],
  "domain_tag": ["AI", "OS", "Programming Language"],
  "mail_list": "Github Issue https://github.com/RT-Thread/rt-thread/issues",
  "email": "support@rt-thread.com",
  "project_list": []
},
{
  "userId": 282,
  "anchor": "apachepulsar",
  "slide": "",
  "video": "",
  "img": "pulsar.jpg",
  "title": "Apache Pulsar 社区",
  "project_url": "",
  "url": "https://pulsar.apache.org",
  "description": "下一代云原生分布式消息流平台",
  "full_des": "Apache Pulsar 是 Apache 软件基金会顶级项目，是下一代云原生分布式消息流平台，集消息、存储、轻量化函数式计算为一体，采用计算与存储分离架构设计，支持多租户、持久化存储、多机房跨区域数据复制，具有强一致性、高吞吐、低延时及高可扩展性等流数据存储特性。",
  "tech_tag": ["Go", "Java", "Distributed System", "Stroage"],
  "domain_tag": ["Cloud Native", "Big Data", "Distributed System", "Streaming", " Storage"],
  "mail_list": "dev@pulsar.apache.org",
  "email": "community@streamnative.io",
  "project_list": []
},
{
  "anchor": "emacs",
  "slide": "",
  "video": "",
  "img": "emacs.jpg",
  "title": "Emacs China",
  "project_url": "",
  "url": "https://emacs",
  "description": "Emacs China是由国内的Emacs爱好者成立的Emacs社区，致力于Emacs相关的技术讨论。",
  "full_des": "Emacs China是由国内的Emacs爱好者成立的Emacs社区，致力于Emacs相关的技术讨论。",
  "tech_tag": [
    "Emacs",
    "Python",
    "Lisp"
  ],
  "domain_tag": [
    "Emacs"
  ],
  "mail_list": "无。可以在Emacs China发帖联系",
  "email": "无。可以在Emacs China发帖联系",
  "project_list": []
},
{
  "userId": 242,
  "anchor": "casbin",
  "slide": "",
  "video": "",
  "img": "casbin.jpg",
  "title": "Casbin||Casbin",
  "project_url": "",
  "url": "https://casbin.org/",
  "description": "一个强大的、高效的开源访问控制框架||Authorization library that supports access control models like ACL, RBAC, ABAC",
  "full_des": "Casbin是一个强大的、高效的开源访问控制框架。涉及到Go, Java, Node.js, Javascript (React), Python, PHP, .NET, C++, Rust等多种语言。Casbin由北京大学罗杨博士创立于2017年，核心维护团队有数十人。Casbin在业界具有广泛影响力。目前已经被Intel、VMware、Orange、RedHat、T-Mobile等公司开源使用，被腾讯云、Cisco、Verizon等公司闭源使用。具体详见Casbin主页。Casbin Go主项目目前GitHub 8600+ stars，加上所有语言的实现、插件等可达到10000+ stars。||Casbin is a powerful and efficient open-source access control library. It provides support for enforcing authorization based on various access control models like ACL, RBAC, ABAC for Golang, Java, Node.js, PHP, Python, .NET (C#), Delphi and Rust.What Casbin does:- Enforce the policy in the classic {subject, object, action} form or a customized form as you defined, both allow and deny authorizations are supported.- Handle the storage of the access control model and its policy.- Manage the role-user mappings and role-role mappings (aka role hierarchy in RBAC).- Support built-in superuser like root or administrator. A superuser can do anything without explict permissions.- Multiple built-in operators to support the rule matching. For example, keyMatch can map a resource key /foo/bar to the pattern /foo*.What Casbin does NOT do:- Authentication (aka verify username and password when a user logs in)- Manage the list of users or roles.I believe it's more convenient for the project itself to manage these entities. Users usually have their passwords, and Casbin is not designed as a password container. However, Casbin stores the user-role mapping for the RBAC scenario. For more details, see: https://casbin.org/",
  "tech_tag": ["Go", "Python", "Java", "C", "Cloud Native", "JavaScript", "PHP", "NodeJS", "React", "C++", "Distributed System", "Rust", "Kubernetes", "TypeScript", "Micro Sevice"],
  "domain_tag": ["Cloud Native", "Distributed System", "Web"],
  "mail_list": "https://forum.casbin.com/",
  "email": "admin@casbin.org",
  "project_list": []
},

{
  "userId": 157,
  "anchor": "apacheskywalking",
  "slide": "",
  "video": "",
  "img": "apacheskyWalking1.jpg",
  "title": "Apache SkyWalking",
  "project_url": "",
  "url": "https://skywalking.apache.org/",
  "description": "SkyWalking is an open source APM for distributed system. Tracing, Metrics and Logging all-in-one solution. Make your services reliable.",
  "full_des": "Apache SkyWalking is a highly diverse community. We as a top-level project of Apache Software Foundation, have 400+ developers all over the world.",
  "tech_tag": [
    "APM",
    "Tracing",
    "Metrics",
    "Logging",
    "Event",
    "Performance"
  ],
  "domain_tag": [
    "Observability",
    "Micro service",
    "Service Mesh",
    "应用性能监控",
    "分布式追踪",
    "分布式系统性能"
  ],
  "mail_list": "dev@skywalking.apache.org (Mail to dev-subscribe@skywalking.apache.org to subscribe)",
  "email": "dev@skywalking.apache.org",
  "project_list": [{
    "name": "License-Eye: Maven 项目 license 分析",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "柯振旭",
    "contact": "<kezhenxu94@apache.org>",
    "student_count": 0,
    "description": "SkyWalking License Eye 是一个全功能的 License 工具，可以检查 / 修复文件头 License 问题，解析项目依赖的 License。\r\n\r\n本项目是为了分析 maven 项目中所引用到的所有依赖项目（包括传递依赖）的 license 类别，避免 Apache 项目（或者其他开源项目）发版可能的 license 问题。",
    "update_time": "2021-04-20 17:51:39",
    "label": "210100101",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go", "Java"],
    "domain_tag": ["Cloud Native", "Dev Tools"],
    "outputRequirement": ["`license-eye dependency check` 命令支持分析 maven 项目依赖，生成项目所依赖的 license 报表，报告与 APL 2.0 不兼容的部分。"],
    "techRequirement": ["Golang", "Java"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "License-Eye: NPM 项目 license 分析",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "柯振旭",
    "contact": "<kezhenxu94@apache.org>",
    "student_count": 0,
    "description": "SkyWalking License Eye 是一个全功能的 License 工具，可以检查 / 修复文件头 License 问题，解析项目依赖的 License。\r\n\r\n本项目是为了分析 NPM 项目中所引用到的所有依赖项目（包括传递依赖）的 license 类别，避免 Apache 项目（或者其他开源项目）发版可能的 license 问题。",
    "update_time": "2021-04-20 17:51:31",
    "label": "210100102",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go", "NodeJS", "npm"],
    "domain_tag": ["Cloud Native", "Dev Tools"],
    "outputRequirement": ["`license-eye dependency check` 命令支持分析 NPM 项目依赖，生成项目所依赖的 license 报表，报告与 APL 2.0 不兼容的部分。"],
    "techRequirement": ["Java", "npm"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "skywalking-python: 定义 meter 上报接口，实现 meter 上报协议",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "柯振旭",
    "contact": "<kezhenxu94@apache.org>",
    "student_count": 0,
    "description": "skywalking-python 是 SkyWalking 的官方 Python 探针。\r\n\r\n本项目目的是进一步将 Python 探针的功能与 Java 探针的功能进行对齐，在 Python 探针中实现指标上报的 API 和协议，有 Java 版本可供参考。",
    "update_time": "2021-04-20 17:51:14",
    "label": "210100103",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python", "gRPC"],
    "domain_tag": ["Cloud Native", "Distributed System", "Observability"],
    "outputRequirement": ["熟练 Python 编程语言和 Python gRPC 框架。"],
    "techRequirement": ["python", "java"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "skywalking-python: 实现日志上报功能",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "张可",
    "contact": "<zhangke@apache.org>",
    "student_count": 0,
    "description": "skywalking-python 是 SkyWalking 的官方 Python 探针。\r\n\r\n本项目是为了在 Python 探针中实现日志收集并通过 gRPC 协议上报给接收端的功能。有 Java 版本实现以供参考。",
    "update_time": "2021-04-20 17:50:43",
    "label": "210100105",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python", "gRPC"],
    "domain_tag": ["Distributed System"],
    "outputRequirement": ["在 skywalking-python 中实现日志上报协议 ，并对 Python 主流日志库支持透明地日志上报。"],
    "techRequirement": ["Python", "gRPC"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "skywalking-cli：易用性优化",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "江华禧",
    "contact": "<hoshea@apache.org>",
    "student_count": 0,
    "description": "skywalking-cli是为SkyWalking用户和OPS团队提供的命令行交互工具。\r\n\r\n本项目是为了让用户能够更便捷、高效地使用来对该命令行工具进行一系列的优化。（适合第一次参与开源的同学）",
    "update_time": "2021-04-20 17:50:34",
    "label": "210100106",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go"],
    "domain_tag": ["Dev Tools"],
    "outputRequirement": ["优化结果的输出", "实现根据命令推断显示类型", "实现命令自动补全", "实现shell脚本一键安装"],
    "techRequirement": ["Golang"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "skywalking-cli：实现实例依赖的展示",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "江华禧",
    "contact": "<hoshea@apache.org>",
    "student_count": 0,
    "description": "skywalking-cli是为SkyWalking用户和OPS团队提供的命令行交互工具。\r\n\r\n本项目是为了在命令行以图形的方式展示service/endpoint的上下游依赖关系，可以参考已有的trace命令来实现。",
    "update_time": "2021-04-20 17:50:25",
    "label": "210100107",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go"],
    "domain_tag": ["Dev Tools", "Vitualization"],
    "outputRequirement": ["`swctl dependency`命令", "实例依赖还需要展示相关的指标"],
    "techRequirement": ["Golang", "GraphQL"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "skywalking e2e，增加metrics exporter测试",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "吴晟",
    "contact": "<wusheng@apache.org>",
    "student_count": 0,
    "description": "skywalking有完整的e2e体系，大部分核心功能通过e2e自动化测试确保功能正确性。\r\n\r\n目前，metrics exporter导出功能没有进行自动化测试。适合对集成以及自动化测试感兴趣的同学参与。",
    "update_time": "2021-04-20 17:50:09",
    "label": "210100108",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Docker"],
    "domain_tag": ["Dev Tools", "Distributed System"],
    "outputRequirement": ["使用golang实现模拟的metrics server做为导出数据的接收方", "为metrics server增加校验接口(http)", "通过e2e框架完成验证"],
    "techRequirement": ["基本的golang和java的开发能力", "了解自动化测试的基本知识，如，docker，maven test"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "go2sky: 增加 dubbo-go 插件",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "张伟",
    "contact": "<zhangwei@apache.org>",
    "student_count": 0,
    "description": "为 go2sky 实现 dubbo-go 插件\r\n\r\nhttps://github.com/SkyAPM/go2sky\r\n\r\nhttps://github.com/SkyAPM/go2sky-plugins\r\n\r\nhttps://github.com/apache/dubbo-go",
    "update_time": "2021-04-20 17:49:57",
    "label": "210100109",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go"],
    "domain_tag": ["Distributed System", "Tracing"],
    "outputRequirement": ["实现 dubbo-go 插件", "增加插件测试"],
    "techRequirement": ["golang", "go2sky", "dubbo-go"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "go2sky: 增加 mysql 插件",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "张伟",
    "contact": "<zhangwei@apache.org>",
    "student_count": 0,
    "description": "为 go2sky 实现 mysql 插件\r\n\r\nhttps://github.com/SkyAPM/go2sky\r\n\r\nhttps://github.com/SkyAPM/go2sky-plugins\r\n\r\nhttps://github.com/go-sql-driver/mysql",
    "update_time": "2021-04-20 17:49:44",
    "label": "210100110",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go"],
    "domain_tag": ["Distributed System", "Tracing"],
    "outputRequirement": ["实现 mysql 插件", "增加插件测试"],
    "techRequirement": ["golang", "go2sky", "go mysql sdk"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "skywalking-transporter-plugin:增加RocketMQ插件",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "庄浩潮",
    "contact": "<daming@apache.org>",
    "student_count": 0,
    "description": "为skywalking实现将Apache RocketMQ作为传输层。\r\n\r\nhttps://rocketmq.apache.org/\r\n\r\nhttps://skywalking.apache.org/",
    "update_time": "2021-04-20 17:47:11",
    "label": "210100111",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java"],
    "domain_tag": ["Distributed System"],
    "outputRequirement": ["实现SkyWalking Agent端exporter插件", "实现Skywalking OAP端fetcher模块"],
    "techRequirement": ["Java", "Apache RocketMQ"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "skywalking-transporter-plugin:增加Apache Pulsar插件",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "庄浩潮",
    "contact": "<daming@apache.org>",
    "student_count": 0,
    "description": "为skywalking实现将Apache Pulsar作为传输层。\r\n\r\nhttps://pulsar.apache.org/\r\n\r\nhttps://skywalking.apache.org/",
    "update_time": "2021-04-20 17:45:20",
    "label": "210100112",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java"],
    "domain_tag": ["Distributed System"],
    "outputRequirement": ["实现SkyWalking Agent端exporter插件", "实现Skywalking OAP端fetcher模块"],
    "techRequirement": ["Java", "Apache Pulsar"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "SkyAPM-php-sdk: 完善redis插件",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "何延龙",
    "contact": "<heyanlong@apache.org>",
    "student_count": 0,
    "description": "为SkyAPM-php-sdk完善redis插件",
    "update_time": "2021-04-20 17:47:19",
    "label": "210100113",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["PHP", "C++"],
    "domain_tag": ["Distributed System", "Tracing"],
    "outputRequirement": ["实现全量redis命令信息收集"],
    "techRequirement": ["PHP", "C++"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "SkyAPM-php-sdk: 实现GRPC链路追踪",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "何延龙",
    "contact": "<heyanlong@apache.org>",
    "student_count": 0,
    "description": "为SkyAPM-php-sdk实现GRPC的跨进程链路追踪\r\n\r\nhttps://github.com/SkyAPM/SkyAPM-php-sdk",
    "update_time": "2021-04-20 17:46:14",
    "label": "210100114",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["PHP", "C++"],
    "domain_tag": ["Distributed System", "Tracing"],
    "outputRequirement": ["实现自动给grpc请求添加跨进程追踪头"],
    "techRequirement": ["PHP", "C++"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "SkyAPM-php-sdk: 内存泄露排查",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "何延龙",
    "contact": "<heyanlong@apache.org>",
    "student_count": 0,
    "description": "为SkyAPM-php-sdk排查内存泄露根源",
    "update_time": "2021-04-20 17:46:03",
    "label": "210100115",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["PHP", "C++"],
    "domain_tag": ["Tracing"],
    "outputRequirement": ["找出内存泄漏代码并修复"],
    "techRequirement": ["PHP", "C++"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "SWCK: 后台存储CRD和Controller",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "高洪涛",
    "contact": "<hanahmily@apache.org>",
    "student_count": 0,
    "description": "SWCK可以使SkyWalking以更加原生的方式运行在Kubernetes平台上。\r\n\r\n本项目的任务是增加新的CRD用来设置存储数据的后台存储，如Elasticsearch，MySQL等。并增加新的Controller去部署CRD中定义的存储",
    "update_time": "2021-04-20 17:44:30",
    "label": "210100116",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go", "Kubernetes"],
    "domain_tag": ["Cloud Native"],
    "outputRequirement": ["实现至少一种SkyWalking支持存储的CRD", "实现相应的Controller"],
    "techRequirement": ["Golang", "Kubernetes"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "SWCK: 配置文件CRD和Controller",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "高洪涛",
    "contact": "<hanahmily@apache.org>",
    "student_count": 0,
    "description": "SWCK可以使SkyWalking以更加原生的方式运行在Kubernetes平台上。\r\n\r\nSkyWalking后台有两类配置文件：静态配置文件和动态配置文件。\r\n\r\n本项目的任务是增加新的CRD用来加载配置文件到SkyWalking后台。如果是静态配置，使用Controller修改SkyWalking关联的ConfigMap，并重启后台的Pod从而加载配置。如果是动态配置，修改关联的ConfigMap即可。",
    "update_time": "2021-04-20 17:44:15",
    "label": "210100117",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go", "Kubernetes"],
    "domain_tag": ["Distributed System"],
    "outputRequirement": ["实现静态配置的CRD和Controller", "实现动态配置的CRD和Controller"],
    "techRequirement": ["Golang", "Kubernetes"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "SWCK: agent容器注入器",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "高洪涛",
    "contact": "<hanahmily@apache.org>",
    "student_count": 0,
    "description": "SWCK可以使SkyWalking以更加原生的方式运行在Kubernetes平台上。\r\n\r\n本项目的任务是使用Admission webhook将agent容器自动挂载到目标Pod中。从而在不修改原镜像的前提下，去使用skywalking agent。",
    "update_time": "2021-04-20 17:42:28",
    "label": "210100118",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go", "Kubernetes"],
    "domain_tag": ["Distributed System"],
    "outputRequirement": ["实现该webhook"],
    "techRequirement": ["Golang", "Kubernetes"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "Satellite支持Trace数据传输",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "吴晟",
    "contact": "<wusheng@apache.org>",
    "student_count": 0,
    "description": "Satellite做为SkyWalking Agent与OAP间的中继节点，可以提供本地存储和协议转换\r\n\r\n本项目的任务是对Satellite中添加对Trace数据的支持。并允许通过Kafka和gRPC两种格式发送给OAP Server",
    "update_time": "2021-04-20 17:41:15",
    "label": "210100119",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go"],
    "domain_tag": ["Distributed System", "Tracing"],
    "outputRequirement": ["实现trace receiver以及对应的sender"],
    "techRequirement": ["Golang", "Java"],
    "orgID": 10,
    "isApproved": 1
  }, {
    "name": "SkyWalking Javaagent和后端支持字符类型Response code",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "吴晟",
    "contact": "<wusheng@apache.org>",
    "student_count": 0,
    "description": "解决返回码存在字符和数据两种格式，造成后端有警告",
    "update_time": "2021-04-20 17:40:41",
    "label": "210100120",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Distributed System"],
    "domain_tag": ["Distributed System", "Tracing"],
    "outputRequirement": ["修复相关问题，并完善相关测试用例"],
    "techRequirement": ["Java"],
    "orgID": 10,
    "isApproved": 1
  }]

},
{
  "userId": 154,
  "anchor": "apacheapisix",
  "slide": "",
  "video": "",
  "img": "apacheapisix1.jpg",
  "title": "Apache APISIX||Apache APISIX",
  "project_url": "",
  "url": "https://apisix.apache.org/",
  "description": "云原生、高性能、可扩展的微服务 API 网关||Cloud-native, high-performance, scalable microservices API gateway",
  "full_des": "Apache APISIX 是云原生、高性能、可扩展的微服务 API 网关，它基于 Nginx 和 etcd 来实现，具备动态路由、插件热加载、 gRPC 代理、协议转换等功能，适合微服务体系下的 API 管理。||Apache APISIX is a cloud-native, high-performance, scalable microservices API gateway based on Nginx and etcd, with dynamic routing, plugin hot-loading, gRPC proxy, protocol conversion, and other features, suitable for API management under the microservices system.",
  "tech_tag": [
    "网关",
    "Nginx",
    "C",
    "Lua",
    "API",
    "Golang",
    "k8s",
    "Helm Chart"
  ],
  "domain_tag": [
    "中间件",
    "微服务"
  ],
  "mail_list": "开发者邮箱列表：dev@apisix.apache.org 订阅指南：https://apisix.apache.org/subscribe-guide",
  "email": "wenming@apache.org",
  "project_list": []
},
{
  "userId": 150,
  "anchor": "apacheiotdb",
  "slide": "",
  "video": "",
  "img": "apacheiotdb.jpg",
  "title": "Apache IoTDB 社区",
  "project_url": "",
  "url": "http://iotdb.apache.org/",
  "description": "工业物联网时序数据库管理系统",
  "full_des": "IoTDB是支持物联网时序数据收集、存储、查询与分析一体化的数据管理引擎，支持“端-边-云”一体化部署，适用于高端装备管、工厂设备、高速网联设备等多种数据管理场景。开源版开发者百余人，社区成员来自中国高校、东方国信、阿里、云智慧、用友、联想、华为、四维图新、网易等头部公司。",
  "tech_tag": ["Java", "Database", "Stroage", "Git", "IoT"],
  "domain_tag": ["Big Data", "Timeseries，Database"],
  "mail_list": "dev@iotdb.apache.org（订阅 dev-subscribe@iotdb.apache.org)",
  "email": "dev@iotdb.apache.org",
  "project_list": []
},
{
  "userId": 159,
  "anchor": "simplexx",
  "slide": "",
  "video": "",
  "img": "simplexx.jpg",
  "title": "Simple-XX||Simple-XX",
  "project_url": "",
  "url": "https://github.com/Simple",
  "description": "帮助初学者实现复杂系统。||To help beginners implement complex systems.",
  "full_des": "在学习操作系统、编译原理时觉得难学难懂？你需要自己动手实现它！我们社区使用基于 Git 分支的增量式方案，向初学者提供简单的代码实现，帮助你快速成长。社区贡献者由在校学生组成，欢迎加入我们。||Do you find it difficult to understand when learning operating systems and compilingprinciples? You need to do it yourself! Our community uses an incremental scheme based onGit branch to provide simple code implementation for beginners and help you acquiremaster quickly. Community contributors are made up of on-campus students. Welcome tojoin us.",
  "tech_tag": ["Linux", "C", "C++", "Git", "Scala"],
  "domain_tag": ["Linux Kernel", "OS", "CPU，Compiler，Renderer"],
  "mail_list": "simple-xx@googlegroups.com  zone.niuzh@hotmail.com  302807330@qq.com",
  "email": "https://github.com/Simple-XX/Summer202X",
  "project_list": []
},
{
  "userId": 146,
  "anchor": "tuna",
  "slide": "",
  "video": "",
  "img": "tuna.jpg",
  "title": "清华大学 TUNA 协会",
  "project_url": "",
  "url": "https://tuna.moe/",
  "description": "清华大学网络技术与开源软件爱好者团体，有较大影响力的高校开源社区。",
  "full_des": "清华大学 TUNA 协会全名清华大学学生网络与开源软件协会（Tsinghua University TUNA Association），是由清华大学网络技术和开源软件爱好者、技术宅组成的团体。社团成立于2011年，目前校内外成员超过500人，校内注册人数接近300人，校内核心（活跃）成员超过50人。 TUNA 协会维护的清华大学开源软件镜像站，包括数百个开源软件。是中国高校目前规模最大的开源镜像站。TUNA 协会为这些业务开发的许多开源软件，包括镜像管理同步套件 tunasync、直播弹幕套件 danmaQ 等，都被国内外同行采用并广受好评。 TUNA 协会也与其他开源社区进行广泛联络，与多个高校开源学生组织、国内开源社区、企业等开展合作，共同举办软硬件件自由日、Release Party 等公众活动，推广开源理念，普及基础知识，为中国开源事业贡献力量，起到了较好的宣传引导作用。",
  "tech_tag": ["Go", "Linux", "Python", "Container", "NodeJS", "C++", "Rust", "Stroage", "Git", "Docker", "Mirrors，Qt"],
  "domain_tag": ["Linux Kernel", "Dev Tools", "服务器运维","网络编程","系统工具"],
  "mail_list": "tuna-general@googlegroups.com",
  "email": "staff@tuna.tsinghua.edu.cn",
  "project_list": [{
    "name": "开源弹幕系统改进",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "陈晟祺",
    "contact": "<shengqi.chen@tuna.tsinghua.edu.cn>",
    "student_count": 0,
    "description": "弹幕是常用的听众与讲者的互动手段。TUNA 开发了自己的 C/S 弹幕系统 danmaQ（见下面的仓库），使用于多种场合，也被多个发行版收录。其服务端使用 Python 编写，客户端使用 Qt 编写，基本实现了跨平台。然而，目前该项目缺乏维护，代码比较陈旧，一些功能缺乏（如 Web 弹幕墙）、不完善（如审核）或已经损坏（如微信互联）。此外，清华大学计算机系科协亦有一套自己实现的弹幕系统 Comment9（见下），使用 Node.js 编写。它与 danmaQ 相比，具有一些高级功能（如多个活动、弹幕墙、多路审核、支持硬件弹幕机），但缺乏弹幕属性配置等。我们希望，整合当前两个系统的功能，改进得到一套全功能的开源弹幕系统，覆盖用户需求。",
    "update_time": "2021-04-20 19:16:33",
    "label": "210160037",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python", "NodeJS", "Qt"],
    "domain_tag": ["Web"],
    "outputRequirement": ["无法填写层级，详见 https://tuna.moe/blog/2021/ospp-summer-2021/"],
    "techRequirement": ["Qt + Python + Node.js 编程（基本语言、简单GUI、使用网络框架）", "网络编程（WebSocket / HTTP 协议）", "NoSQL 数据库（redis / mongoDB）", "简单前端设计（CSS / Javascript）"],
    "orgID": 16,
    "isApproved": 1
  }, {
    "name": "跨平台 NFC 读写套件的维护与升级",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "陈晟祺",
    "contact": "<shengqi.chen@tuna.tsinghua.edu.cn>",
    "student_count": 0,
    "description": "我们基于 Flutter 框架，实现了跨平台的 NDEF 格式解析库、移动端 NFC 框架和 NFC 信息读取应用 NFSee。目前，Flutter 已经发布了 2.0 版本，引入了较多的变化，迁移到新框架有一定的工作量。同时，在使用过程中，这些库积累了一些 bug 和功能请求，需要进一步的修复和实现。",
    "update_time": "2021-04-20 19:16:45",
    "label": "210160038",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Flutter"],
    "domain_tag": ["NFC，Mobile"],
    "outputRequirement": ["将提供的三个项目均迁移到 Flutter 2.0 版本", "维护 NDEF 库，修复 bug，提供更多格式支持", "维护 flutter_nfc_kit 库，修复 bug，实现流式读卡接口（可选），并相应更新文档", "维护 NFSee，修复界面 bug，并添加更多卡片支持（如果有）"],
    "techRequirement": ["使用过 Dart 编程语言和 Flutter 开发框架（或能够及时学习）", "了解 NFC 基础知识和常见的 NFC 标准（导师可提供相关文档指导）", "有支持 NFC 的 Android / iOS 设备（可提供，但具备更佳）"],
    "orgID": 16,
    "isApproved": 1
  }, {
    "name": "Windows 平台 SSH agent 的统一实现",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "许朋程",
    "contact": "<i@jsteward.moe>",
    "student_count": 0,
    "description": "在 Windows 平台使用 ssh agent 远不及 Linux 平台方便。通常 ssh agent 需要满足以下两个角色：\r\n\r\n* 保管用户的 ssh private key 或是和 smartcard 通信\r\n* 接受来自 ssh 客户端的 authentication 请求\r\n\r\nWindows 上存在 PuTTY (pageant)，Win32 OpenSSH, WSL OpenSSH 等多种 ssh 实现，有 pageant socket 和 windows named pipe (OpenSSH) 两种 agent 通信协议。同时，agent 实现也有 GnuPG agent (simulated pageant, for gpg smartcard), Windows OpenSSH agent 两种。本项目需要参与学生实现一个 ssh agent 协议翻译器，实现不同 ssh 客户端使用同一个 ssh agent 实例的任务。",
    "update_time": "2021-04-20 19:16:24",
    "label": "210160039",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["C#，GPG，SSH，PowerShell，Network，Socket"],
    "domain_tag": ["Windows"],
    "outputRequirement": ["此处无法填写，详见 https://tuna.moe/blog/2021/ospp-summer-2021/"],
    "techRequirement": ["熟悉任何一种 Windows 平台上可以 开箱即用 的的编程语言（推荐 C++/C# .NET，也包括脚本语言，如 PowerShell）", "熟悉 Windows named pipe, Unix socket (on Linux and Windows) 相关操作", "了解 ssh agent 的工作机理和使用方法", "了解 gnupg 使用方法（ssh 模拟部分）"],
    "orgID": 16,
    "isApproved": 1
  }, {
    "name": "MirrorZ：镜像站搜索引擎——镜像站状态的表示、收集与利用",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "郑鈜壬",
    "contact": "<hongren.zheng@tuna.tsinghua.edu.cn>",
    "student_count": 0,
    "description": "项目描述：国内镜像站较多，但其内容、同步状态、网络环境各不相同。例如 OpenWrt 镜像，只有部分镜像站拥有 snapshots 的内容，又例如一些镜像的同步状态落后几天乃至几周，其使用的同步后端也各不相同，又例如一些高校的镜像站对校外限速，例如其接入的线路是教育网，对三大运营商用户来说访问较为不理想。之前的 mirrorhub 项目静态地通过用户的网段进行负载均衡，目前的 mirrorz 只有实验性的自动跳转后端与搜索后端，上述实现的指标与功能都不够完善，效果也不理想，所以一个兼顾上述三项内容的镜像站搜索引擎是我们所需要的。",
    "update_time": "2021-04-20 17:56:02",
    "label": "210160040",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go", "C++", "Database", "Rust", "Backend，Network"],
    "domain_tag": ["Web", "Mirror"],
    "outputRequirement": ["对镜像站的状态有较好的表示", "对镜像站各镜像的同步状态有较好的表示", "将上述指标进行收集", "基于收集的指标实现自动跳转或反代的后端", "如果可能，实现一个搜索后端"],
    "techRequirement": ["爬取镜像站状态的爬虫（例如使用 Python、Node.js 实现）", "数据库 （例如 InfluxDB）", "高性能的后端 （例如使用 Rust、Go 实现）"],
    "orgID": 16,
    "isApproved": 1
  }]
},

{
  "userId": 164,
  "anchor": "oiwiki",
  "slide": "",
  "video": "",
  "img": "oiwiki.jpg",
  "title": "OI Wiki||OI Wiki",
  "project_url": "",
  "url": "https://oi",
  "description": "给所有人的编程竞赛知识整合站点，内含炫酷算术魔法！||Wiki of OI / ICPC for everyone.",
  "full_des": "OI Wiki 是一个编程竞赛知识整合站点，提供有趣又实用的编程竞赛知识以及其他有帮助的内容，帮助广大编程竞赛爱好者更快更深入地学习编程竞赛。同时我们围绕 OI Wiki 主站开展一些相关的基础设施建设，包括 markdown 渲染工具以及周边诸多开发工具。详情可以访问 <https://github.com/OI-wiki>||OI Wiki aims to share knowledge on competitive programming, and we also maintain some related infrastructures, including markdown rendering tools and exporting tools.",
  "tech_tag": ["Python", "C", "JavaScript", "NodeJS", "AI", "C++", "TypeScript", "Automation", "Git", "Docker"],
  "domain_tag": ["Dev Tools", "Web", "Programming Language", "Algorithms", " Data Structures"],
  "mail_list": "https://t.me/oiwiki> 以及 QQ 群 588793226",
  "email": "hi@oi-wiki.org",
  "project_list": [{
    "name": "OI Wiki 国际化",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "ksyx",
    "contact": "<ksyxmeow@outlook.com>",
    "student_count": 0,
    "description": "OI Wiki 上收录了大量优质的算法内容，但是他们主要是以中文编写的，会对外国友人的学习造成一定的障碍，因此为了更好的扩大 OI Wiki 的影响力和帮助到更多的人，开展本项目。本项目主要内容为将 OI Wiki 上现有的内容按照格式要求翻译成英文。",
    "update_time": "2021-04-20 19:12:16",
    "label": "210140093",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["C++"],
    "domain_tag": ["Algorithms", " Data Structures"],
    "outputRequirement": ["将部分现有页面（含图片内的中文）翻译成英文", "校对现有已翻译内容，将主站增加的部分内容加入"],
    "techRequirement": ["具有一定的英语能力", "能使用 Git 进行协作开发", "熟悉 Markdown 和 MathJax 语法", "热爱算法与数据结构", "具有翻译经验者优先"],
    "orgID": 14,
    "isApproved": 1
  }, {
    "name": "OI Wiki Python 示例重构",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "Xeonacid",
    "contact": "<acid@oi-wiki.org>",
    "student_count": 0,
    "description": "OI Wiki 上收录了大量题目等代码，主要是使用 C++ 来进行实现的。在这个项目中，我们希望能对经典算法维护 python 版本的简洁实现。",
    "update_time": "2021-04-20 19:12:03",
    "label": "210140095",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python", "C++"],
    "domain_tag": ["Algorithms", " Data Structures"],
    "outputRequirement": ["对经典算法维护 Python 版本的简介实现", "要求可以提交到 Online Judge 进行测试"],
    "techRequirement": ["能使用 Git 进行协作开发", "熟悉 Markdown 和 MathJax 语法", "熟练使用 Python", "热爱算法与数据结构"],
    "orgID": 14,
    "isApproved": 1
  }, {
    "name": "优化基于 unifiedjs 的 markdown 基础设施",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "mgt",
    "contact": "<mgt@oi-wiki.org>",
    "student_count": 0,
    "description": "在新前端中，为了支持我们的诸多 markdown 自定义语法，我们使用了 remark 作为 markdown parser，并使用 rehype 生成对应的 html 页面。目前我们采用的是 remark@12.0，为了进一步提升性能，我们计划将基础设施升级到最新版（13.0 以上），并采用 micromark。在这个项目中，我们希望能将这些仓库的实现进行升级（remark-details, remark-math-space, remark-clang-format,  rehype-details）。",
    "update_time": "2021-04-20 19:11:39",
    "label": "210140096",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["JavaScript", "NodeJS", "TypeScript"],
    "domain_tag": ["Dev Tools"],
    "outputRequirement": ["将这些仓库的实现进行升级（remark-details, remark-math-space, remark-clang-format,  rehype-details）"],
    "techRequirement": ["熟练使用 JavaScript", "能使用 Git 进行协作开发", "熟悉 remark 系列生态者优先"],
    "orgID": 14,
    "isApproved": 1
  }, {
    "name": "OI Wiki 在线题单提名及投票功能",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "ir1d",
    "contact": "<sirius.caffrey+OI@gmail.com>",
    "student_count": 0,
    "description": "随着 NOI 考纲的发布，我们希望能尽量按照考纲整合优质题目资源。然而，由于题目质量参差不齐，我们希望在新上线的前端系统中支持提名优质题目并对现有例题进行投票的功能。",
    "update_time": "2021-04-20 19:12:29",
    "label": "210140098",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["JavaScript", "NodeJS", "TypeScript"],
    "domain_tag": ["Algorithms", " Data Structures"],
    "outputRequirement": ["与目前编码风格保持一致，尽量以 Typescript 为主要编程语言", "实现在线题单提名及投票功能", "协助解决目前项目中存在的 issue"],
    "techRequirement": ["前端开发的相关知识（HTML/CSS/Javascript/Typescript/React）", "熟练使用 Git 进行协作开发"],
    "orgID": 14,
    "isApproved": 1
  }]

},
{
  "userId": 233,
  "anchor": "openlookeng",
  "slide": "",
  "video": "",
  "img": "openlookeng.jpg",
  "title": "openLooKeng社区||openLooKeng Community",
  "project_url": "",
  "url": "https://openlookeng.io/",
  "description": "openLooKeng是一款开源的数据虚拟化引擎，像使用数据库一样使用大数据。||openLooKeng is a distributed, low latency, reliable data engine for all data, big or small, local or remote. It help big data users to use big data like database.",
  "full_des": "openLooKeng是一款开源的高性能数据虚拟化引擎，提供统一SQL接口，具备跨数据源/数据中心分析能力以及面向交互式、批、流等融合查询场景。openLooKeng致力于为大数据用户提供极简的数据分析体验，让用户像使用“数据库”一样使用“大数据”。||openLooKeng is a drop in engine which enables in-situ analytics on any data, anywhere, including geographically remote data sources. It provides a global view of all of your data via its SQL 2003 interface. With high availability, auto-scaling, built-in caching and indexing support, openLooKeng is ready for enterprise workload with required reliability.The goal of openLooKeng is to support data exploration, ad hoc queries, and batch processing with near real time latency ranging from 100+ms to minutes, without moving your data around. openLooKeng also supports hierarchical deployment enabling geographically remote openLooKeng clusters to participate in the same query. With its cross region query plan optimization capability, queries involving remote data can achieve close to “local” performance.",
  "tech_tag": [
    "大数据",
    "数据虚拟化引擎"
  ],
  "domain_tag": [
    "大数据"
  ],
  "mail_list": "dev@openlookeng.io",
  "email": "contact@openlookeng.io",
  "project_list": [{
    "name": "openLooKeng 支持 HA Proxy",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "张景芳",
    "contact": "<410920672@qq.com>",
    "student_count": 0,
    "description": "openLooKeng 支持 HA 模式，借助 Nginx 等第三方代理的能力，可以实现多个 Coordinator 之间的负载均衡，但 Nginx 等第三方代理无法自动发现 Coordinator，如果有新的 Coordinator 加入，那么需要手动修改 Nginx 等第三方 Proxy 的配置，这样给集群管理带来一定的难度。项目通过扩展 openLooKeng 原有的 Proxy 逻辑，结合 openLooKeng 的 discovery 框架，实现：\r\na) 自动发现和监测，当 Coordinator 节点加入或退出时，可以近实时（ms级）的更新服务列表；\r\nb) 负载均衡，默认实现一种策略即可，但接口必须可扩展以便支持多种负载均衡策略；\r\nc) 高性能转发，以 Nginx 为标杆。\r\n\r\n相关的开源软件仓库列表：\r\nhttps://gitee.com/openlookeng/hetu-core",
    "update_time": "2021-04-20 19:13:37",
    "label": "210200082",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Distributed System", "Database", "Big Data"],
    "domain_tag": ["Big Data"],
    "outputRequirement": ["proxy设计文档", "Proxy 代码和相关测试用例", "Proxy 性能测试结果"],
    "techRequirement": ["正向代理原理", "NIO 理论知识", "负载均衡理论知识", "Airlift Discovery 框架"],
    "orgID": 20,
    "isApproved": 1
  }, {
    "name": "openLooKeng AI 参数调优",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "李铮",
    "contact": "<lizheng@hust.edu.cn>",
    "student_count": 0,
    "description": "当部署 openLooKeng 到一个新的集群当中时，对于参数的调整追求更高的性能是一个永恒的难题。openLooKeng 核心参数众多，性能调优涉及各种配置文件中的参数，比如各特性的配置属性，JDK参数等，如何根据多个维度的输入，如集群的结点个数，CPU核数、内存大小以及网络情况推荐更好的参数配置，进行设计方案，实现 AutoML，进行参数的自适应学习，得到更好的参数配置，让 openLooKeng 运行的更快。\r\n\r\n相关的开源软件仓库列表：\r\n1. https://gitee.com/openlookeng/hetu-core\r\n2. DAC: Datasize-Aware High Dimensional Configurations Auto-Tuning【 Zhibin Yu et al. （2018）】\r\n3. Vega: Towards an End-to-end configurable AutoML pipline 【Jiajin Zhang et al. 2020】",
    "update_time": "2021-04-20 19:13:26",
    "label": "210200083",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Distributed System", "Database", "Big Data"],
    "domain_tag": ["Big Data"],
    "outputRequirement": ["AutoML模型，结合 openLooKeng 进行参数自动调优", "TPCDS Benchmark，调参前后性能对比测试"],
    "techRequirement": ["在 openLooKeng 参数中寻找最优参数，性能相对默认参数有明显性能提升", "可以参考多种AutoML模型"],
    "orgID": 20,
    "isApproved": 1
  }, {
    "name": "openLooKeng Elasticsearch Connector 支持算子下推",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "黎一泽 / Armlly",
    "contact": "<liyizeyouxiang@live.cn>",
    "student_count": 0,
    "description": "当前通过openLooKeng Elasticsearch Connector查询Elasticsearch数据源数据时，需要全数据表取回。当涉及的数据量比较大，且 openLooKeng 中输入的 SQL 语句含有较多的数据过滤条件，数据项全取回时大量的取回的数据为无用数据，非常浪费网络带宽。Elasticsearch数据源具有较强的计算能力，能够对数据进行过滤计算操作。将openLooKeng内核中的过滤算子映射为 Elasticsearch 可执行的过滤操作，使得数据能够提前在 Elasticsearch过滤计算 （例如将 openLooKeng 中的‘count’算子推到 Elasticsearch），减少数据传输，使得 openLooKeng SQL 作业执行时间大幅缩短，是本项目的需要达到的目标。\r\n\r\n相关的开源软件仓库列表：\r\nhttps://gitee.com/openlookeng/hetu-core",
    "update_time": "2021-04-20 19:13:18",
    "label": "210200084",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Distributed System", "Database", "Big Data"],
    "domain_tag": ["Big Data"],
    "outputRequirement": ["openLooKeng过滤算子到Elasticsearch过滤操作的映射模型", "重构现有openLooKeng Jdbc connector算子下推框架，提交可执行代码", "TPCDS Benchmark，执行下推前后TPCDS执行性能对比和分析"],
    "techRequirement": ["SQL、Java编程", "数据库内核引擎相关技术", "openLooKeng 和 Elasticsearch 使用"],
    "orgID": 20,
    "isApproved": 1
  }]
},
{
  "userId": 284,
  "anchor": "opengauss",
  "slide": "",
  "video": "",
  "img": "opengauss.jpg",
  "title": "openGauss社区",
  "url":"https://opengauss.org/zh/",
  "project_url": "",
  "description": "openGauss是一款高性能、高安全、高可靠的企业级开源关系型数据库。|| openGauss is an enterprise-grade open source relational database with high-performance, high-security, high-reliability.",
  "full_des": "openGauss是一款开源关系型数据库管理系统，采用木兰宽松许可证v2发行。深度融合华为在数据库领域多年的经验，结合企业级场景需求，持续构建竞争力特性。同时openGauss也是一个开源的数据库平台，鼓励社区贡献、合作。||openGauss is an open source relational database management system that is released with the Mulan PSL v2. with the kernel derived from PostgreSQL, openGauss is built on Huawei's years of experience in the database field and continuously provides competitive features tailored to enterprise-grade scenarios. At the same time, openGauss is also an open source database platform, encouraging community contributions and cooperation.",
  "tech_tag": ["Python", "Java", "C++"],
  "domain_tag": ["database management system"],
  "mail_list": "community@opengauss.org",
  "email": "contact@opengauss.org",
  "project_list": []
},
{
  "userId": 148,
  "anchor": "zstackcloud",
  "slide": "",
  "video": "",
  "img": "zstack.jpg",
  "title": "ZStack Cloud 平台||ZStack Cloud",
  "project_url": "",
  "url": "https://www.zstack.io/",
  "description": "ZStack 是一款具备简单、健壮、弹性、智能等特性的 IaaS 产品。||ZStack is open source IaaS(infrastructure as a service) software aiming to automate datacenters, managing resources of compute, storage, and networking all by APIs.",
  "full_des": "ZStack 云平台具备自主知识产权、自主开源云代码、自主云平台三大优势，凭借云计算的 4S 特性，践行产品化，普惠云计算。其中，ZStack 开源代码提供了整个产品的框架、底座和基础的计算，网络，存储等 IaaS 软件的功能。||ZStack is open source IaaS(infrastructure as a service) software aiming to automate datacenters, managing resources of compute, storage, and networking all by APIs. Users can setup ZStack environments in a download-and-run manner, spending 5 minutes building a POC environment all on a single Linux machine, or 30 minutes building a multi-node production environment that can scale to hundreds of thousands of physical servers.ZStack provides the capability of managing everything in a datacenter by APIs, fulfilling the goal of software-defined datacenter. Users control their clouds using either web UI or command line tool both of which interact with ZStack management nodes; NO scattered configurations, dependent software installation, services HA, and thirdparty monitoring are needed, all of them are taken care of by ZStack itself, which provides a great simplicity for stable long-term operation.",
  "tech_tag": ["Go", "Linux", "Python", "Java", "Distributed System"],
  "domain_tag": ["Vitualization", "Distributed System"],
  "mail_list": "zstack@googlegroups.com  wei.wang@zstack.io",
  "email": "contact@zstack.io",
  "project_list": []
},

{
  "userId":297,
  "anchor": "jenkins",
  "slide": "",
  "video": "",
  "img": "jenkins.jpg",
  "title": "Jenkins 中文社区||Jenkins Chinese community",
  "project_url": "",
  "url": "https://jenkins-zh.cn/",
  "description": "共建开放、包容、活跃的 Jenkins 社区||Build an open, inclusive, active Jenkins community",
  "full_des": "Jenkins 中文社区是由 Jenkins 国内的爱好者、贡献者组成，共同推广以及完善 CI/CD 技术的学习试用和落地。我们秉承开源的精神，在社区治理上高度开放，代码、文档以及设计等开源免费，致力于为我们的用户带来更好的体验。||Jenkins Chinese community is composed of Jenkins domestic fans and contributors to jointly promote and improve the learning, trial, and implementation of CI/CD technology. We uphold the spirit of open source and are highly open in community governance. Open source code, documentation, and design are free, and we are committed to bringing a better experience to our users.",
  "tech_tag": [
    "jenkins"
  ],
  "domain_tag": [
    "CI/CD",
    "jenkins",
    "DevOps",
    "OpenSource"
  ],
  "mail_list": "developer@jenkins-zh.cn",
  "email": "admins@jenkins-zh.cn",
  "project_list": []
},
{
  "userId": 132,
  "anchor": "openeuler",
  "slide": "",
  "video": "",
  "img": "openeuler.jpg",
  "title": "openEuler社区||openEuler Community",
  "project_url": "https://gitee.com/openeuler-competition/summer-2021/issues",
  "url": "https://openeuler.org/",
  "description": "一个开源、免费的 Linux 发行版平台。||An open source and a free platform for Linux released edition.",
  "full_des": "openEuler 是一个开源、免费的 Linux 发行版平台，将通过开放的社区形式与全球的开发者共同构建一个开放、多元和架构包容的软件生态体系。同时，openEuler 也是一个创新的平台，鼓励任何人在该平台上提出新想法、开拓新思路、实践新方案。||An open source and a free platform for Linux released edition, which aims to build an open, diversified and architecture inclusive software ecosystem with global developers through openEuler community. At the same time, it is also an innovative platform, which encourages anyone to put forward new ideas, develop new ideas and practice new schemes.",
  "tech_tag": [
    "Linux",
    "操作系统",
    "虚拟化",
    "容器"
  ],
  "domain_tag": [
    "操作系统"
  ],
  "mail_list": "community@openeuler.org",
  "email": "contact@openeuler.io",
  "project_list": [{
    "name": "使用 ARM SVE 向量指令在 BLIS 上实现 BLAS Level-3 高性能计算",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "徐国栋",
    "contact": "<guodong.xu@linaro.org>",
    "student_count": 0,
    "description": "Scalable Vector Extension, or SVE，是 ARM 公司在 Armv8 架构上推出的新一代向量指令集，拥有业界领先的可变向量宽度支持（从 128bit 到 2048bit ）。BLIS 是线性代数库 BLAS APIs 的一个开源高性能实现。其模块化，高性能，易移植，并行性，有相应论文支撑，并在生产中有具体实践。BLAS level-3 APIs 定义的是 矩阵 - 矩阵 计算.\r\n本项目要求使用 ARM SVE 向量指令为 BLIS 编写 BLAS level-3 kernel，并且提交到 BLIS 上游社区。\r\n项目调试，需要在 ARM64 鲲鹏服务器上，使用 QEMU， Docker，Arm IE （Instruction Emulator）搭建调试环境，进行 编码，测试。",
    "update_time": "2021-04-17 20:43:17",
    "label": "210010001",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3D35W?from=project-issue",
    "tech_tag": ["高性能计算"],
    "domain_tag": ["操作系统"],
    "outputRequirement": ["写出的代码要求符合 BLIS 代码规范，并且通过 BLAS level-3 的功能正确性测试。", "代码 patch 提交到 BLIS 社区，争取在本项目持续期内获得社区认可，patch 能合入到 BLIS 代码库中。"],
    "techRequirement": ["懂得基本的汇编语言编程常识。有 ARM 汇编的技术基础者更佳。", "对 BLAS 代数库有一定的使用经验。对高性能计算 HPC 有使用经验。"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "为 openEuler DDE 桌面添加系统资源监控报警应用",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "魏东",
    "contact": "<weidong@uniontech.com>",
    "student_count": 0,
    "description": "当前DDE桌面系统虽然有类似系统监视器的应用，但是它不会发出告警信息。部分使用情况下，桌面会卡死，导致用户无法操作。需要有一个桌面应用，它会监控系统的资源使用情况(cpu/mem/disk等)。并在系统资源持续高于用户设定的数值或默认数值时，桌面会发出告警信息。\r\n参考监控指标：CPU 利用率、内存使用率、磁盘使用情况。本应用并不做细节监控，只做核心指标监控和报警\r\n警告方式：警告方式为系统通知",
    "update_time": "2021-04-17 20:44:22",
    "label": "210010002",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DHL8?from=project-issue",
    "tech_tag": ["桌面环境"],
    "domain_tag": ["操作系统"],
    "outputRequirement": ["告警阈值可设定", "系统资源使用高于应用默认值或用户设定值时，会在桌面发出告警信息", "告警信息需支持国际化，初步可以只支持中英文。"],
    "techRequirement": ["了解linux 操作系统", "了解桌面应用", "c++\\qt或python\\pyqt"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "开源项目开发者流失预测分析",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "钟君",
    "contact": "<jun.zhongjun@huawei.com>",
    "student_count": 0,
    "description": "有研究表明获取新用户的成本是留住已有用户成本的五倍。openEuler想要成为更活跃的开源社区，用户的留存就显得更为重要，因此，识别开发者的流失情况，及时预测及发现，及时阻止，能有效提高社区活跃度。\r\n\r\n通过AI等能力建立数据分析服务，可更好的提取流失度量模型，识别或者预测流失的开发者、识别流失关键事件，从而改进社区事件，提升社区人员留存率。\r\n\r\n本任务会提供源数据供同学们研究流失模型。数据包括正向数据及负向数据等样本数据。",
    "update_time": "2021-04-17 20:44:55",
    "label": "210010003",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DO3J?from=project-issue",
    "tech_tag": ["AI"],
    "domain_tag": ["开源度量"],
    "outputRequirement": ["输出流失最优预测模型（比如：随机森林模型、xgboost模型等）", "及时发现即将流失的开发者", "召回率达到0.5以上。", "流失看板输出：按照时间段输出之前活跃当前不活跃的sig", "流失看板输出：按照时间段输出之前活跃当前不活跃的开发者"],
    "techRequirement": ["了解linux 操作系统", "了解大数据分析系统spark相关", "熟悉java、python", "了解基本模型分析、特征工程等"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "LOOP设备支持IO并行化",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "张奇龙",
    "contact": "<zhangqilong3@huawei.com>",
    "student_count": 0,
    "description": "内核中的loop设备IO会顺序提交到相应kwoker的链表并依次被内核处理。当某个loop设备所在的文件系统IO比较繁忙或者其处理IO请求的kwoker没有得到及时调度时，此时该loop设备的IO以及后续IO请求都会被阻塞，此时极容易导致使用该loop设备的上层应用卡顿。",
    "update_time": "2021-04-17 20:45:20",
    "label": "210010004",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DUOS?from=project-issue",
    "tech_tag": ["kernel"],
    "domain_tag": ["操作系统"],
    "outputRequirement": ["在openEuler-21.03内核中给出触发该问题的场景或者测试用例（较高概率出现就可以），loop设备IO并行化能够正常使能和挂载运行，代码合入该内核中（请优先使能ext4或者f2fs文件系统支持loop设备IO的并行化）"],
    "techRequirement": ["了解linux操作系统", "熟悉文件系统子模块", "熟悉IO子模块"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "为 openEuler提供OpenStack Swift软件包",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "王玺源",
    "contact": "<wangxiyuan@huawei.com>",
    "student_count": 0,
    "description": "OpenStack是一个开源的云计算管理平台项目，是一系列软件开源项目的组合。由NASA(美国国家航空航天局)和Rackspace合作研发并发起，以Apache许可证（Apache软件基金会发布的一个自由软件许可证）授权的开源代码项目。OpenStack为私有云和公有云提供可扩展的弹性的云计算服务。项目目标是提供实施简单、可大规模扩展、丰富、标准统一的云计算管理平台。整个OpenStack框架由众多组件组成，这些组件为云计算平台提供不同的服务。",
    "update_time": "2021-04-17 20:46:11",
    "label": "210010005",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DUTE?from=project-issue",
    "tech_tag": ["Linux", "openstack", ""],
    "domain_tag": ["OS", "云计算"],
    "outputRequirement": ["在openEuler上使用rpmbuild工具完成RPM打包", "在openEuler Gitee软件仓库中创建OpenStack Swift软件仓库，并提交对应Spec文件", "完成Swift服务全量功能测试，保证服务正常可用，与其他OpenStack组件正常配套使用。"],
    "techRequirement": ["熟练使用Linux操作系统", "了解基本的云计算概念"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "将MindSpore 1.1.1版本引入openEuler",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "郑振宇",
    "contact": "<zheng.zhenyu@outlook.com>",
    "student_count": 0,
    "description": "MindSpore是由华为开源的端边云全场景按需协同的华为自研AI计算框架，提供全场景统一API，为全场景AI的模型开发、模型运行、模型部署提供端到端能力。MindSpore社区目前已经成为了国内最活跃的AI开源社区，将MindSpore引入到openEuler可以极大的丰富openEuler在AI领域的生态。。更多有关MindSpore的内容请参考：https://www.mindspore.cn\r\n\r\nMindSpore的安装方式有三种，一种是通过源码直接安装，这种方式安装需要进行编译适配等工作，对使用者能力要求高，另一种是通过pip工具进行安装，这种安装方式需要依赖外部网络连接，对于网络环境不好的情况下比较耗时，最后一种是通过rpm安装是Linux系统上最为常用的安装方式，这种方式将预先编译好的MindSpore和其依赖打包在rpm软件包中，并上传到操作系统的中央软件仓库，安装时只需要使用\"yum install MindSpore\"命令就可以安装。",
    "update_time": "2021-04-17 20:48:00",
    "label": "210010006",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DUTG?from=project-issue",
    "tech_tag": ["openEuler，Mindspore"],
    "domain_tag": ["AI", "操作系统"],
    "outputRequirement": ["在openEuler操作系统上使用rpmbuild工具完成MindSpore 1.1.1版本本地打包", "在openEuler Gitee软件代码仓库中创建MindSpore仓库，并提交对应Spec文件，使用MindSpore完成MNIST训练。"],
    "techRequirement": ["熟练使用Linux操作系统", "了解MindSpore的基本使用方法"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "将Hadoop 3.3.0版本引入openEuler",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "郑振宇",
    "contact": "<zheng.zhenyu@outlook.com>",
    "student_count": 0,
    "description": "ARM架构，是一类采用精简指令集设计的处理器架构，被广泛地使用在许多嵌入式系统、移动通信和智能终端中。随着ARM架构的不断演进，在最近今年已经出现了多款基于ARM架构的个人电脑和数据中心芯片，包括华为鲲鹏920、AWS Gravition2、Ampere Altra、Apple M1等，并且由于其出色的性能表现，已经在市场引起了很好的反响。由于Arm架构与传统的x86架构在底层编译上有所不同，因此业务软件需要进行相应的适配。\r\n\r\nHadoop是一个由Apache基金会所开发的分布式系统基础架构。用户可以在不了解分布式底层细节的情况下，开发分布式程序。充分利用集群的威力进行高速运算和存储。\r\n\r\nHadoop 3.3.0版本于2020年7月14日发布，是首个源生支持Arm平台的Hadoop版本，将其引入openEuler可以减少用户在Arm平台使用Hadoop的适配难度。",
    "update_time": "2021-04-17 20:48:46",
    "label": "210010007",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DUUJ?from=project-issue",
    "tech_tag": ["Hadoop"],
    "domain_tag": ["操作系统"],
    "outputRequirement": ["在openEuler上使用rpmbuild工具完成RPM打包", "在openEuler Gitee软件仓库中创建Hadoop 3.3.0软件仓库，并提交对应Spec文件", "完成Hadoop服务TeraSort测试。"],
    "techRequirement": ["熟练使用Linux操作系统", "了解Hadoop各个组件和使用方法"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "MariaDB上游ARM64优化patch回合老版本",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "赵波",
    "contact": "<zhaobo6@huawei.com>",
    "student_count": 0,
    "description": "ARM架构，是一类采用精简指令集设计的处理器架构，被广泛地使用在许多嵌入式系统、移动通信和智能终端中。随着ARM架构的不断演进，在最近今年已经出现了多款基于ARM架构的个人电脑和数据中心芯片，包括华为鲲鹏920、AWS Gravition2、Ampere Altra、Apple M1等，并且由于其出色的性能表现，已经在市场引起了很好的反响。由于Arm架构与传统的x86架构在底层编译上有所不同，因此业务软件需要进行相应的适配。\r\n\r\n这几年随着ARM平台生态的不断完善，越来越多的软件都可以运行在ARM平台上。但是对于近几年的更新，大多数ARM优化都是做在软件的最新版本，那么对于老牌的开源数据库，用户群体比较分散，大多数用户都会选用稳定运行的版本，而不是最新版本，所以为了客户，我们将现有最新版的优化返合回老的社区版，并经过打包，基准测试，性能测试等等。让用户同样能够体验老版本软件在ARM平台上的性能提升是十分必要的。特性优化列表由导师提供。\r\n\r\nMariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。",
    "update_time": "2021-04-17 20:49:21",
    "label": "210010008",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DUXZ?from=project-issue",
    "tech_tag": ["Linux", "MariaDB"],
    "domain_tag": ["OS", "数据库"],
    "outputRequirement": ["社区上游ARM优化返合至数据库老版本。代码适配", "将合入优化的软件包打成rpm包。", "输出优化后软件基准测试及性能测试报告。"],
    "techRequirement": ["了解MariaDB/MySQL开源数据库。", "熟悉C/C++", "熟悉ARM架构与X86架构差异，了解指令集差异", "了解如何使用工具对数据库软件进行性能测试。"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "为 openEuler提供OpenStack容器化部署能力",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "王玺源",
    "contact": "<wangxiyuan@huawei.com>",
    "student_count": 0,
    "description": "OpenStack是一个开源的云计算管理平台项目，是一系列软件开源项目的组合。由NASA(美国国家航空航天局)和Rackspace合作研发并发起，以Apache许可证（Apache软件基金会发布的一个自由软件许可证）授权的开源代码项目。OpenStack为私有云和公有云提供可扩展的弹性的云计算服务。项目目标是提供实施简单、可大规模扩展、丰富、标准统一的云计算管理平台。整个OpenStack框架由众多组件组成，这些组件为云计算平台提供不同的服务。更多有关OpenStack内容请见：https://www.openstack.org/software/\r\n\r\nOpenStack包含组件繁多，其安装部署是非常令人头疼的问题。使用容器化技术，可以显著降低OpenStack的部署难度。本题目使用OpenStack+Kubernetes+Isula技术栈，实现OpenStack在openEuler上的容器化快速部署能力。",
    "update_time": "2021-04-17 20:46:57",
    "label": "210010009",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DV1S?from=project-issue",
    "tech_tag": ["openstack", ""],
    "domain_tag": ["OS", "Cloud Native"],
    "outputRequirement": ["完成OpenStack对应的kubernetes部署文件编写；", "部署、测试并验证OpenStack+kubernetes+isula集群环境，输出相关测试报告。"],
    "techRequirement": ["熟练使用Linux操作系统。", "了解基本的云计算概念。", "了解并会使用docker或isula等容器服务。", "了解并会使用kubernetes容器编排服务。", "对虚拟化或容器化网络有一定了解。"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "为openEuler提供ClickHouse rpm包",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "赵波",
    "contact": "<zhaobo6@huawei.com>",
    "student_count": 0,
    "description": "ClickHouse是俄罗斯第一大搜索引擎Yandex开发的列式储存数据库,主要用于数据分析（OLAP）领域。ClickHouse 的性能超过了目前市场上可比的面向列的 DBMS，每秒钟每台服务器每秒处理数亿至十亿多行和数十千兆字节的数据。\r\n\r\n当前 openeuler 的数据库领域对于AP领域的数据库软件仍然比较少，但是有越来越多的客户聚焦AP场景，需要丰富客户选择的数据库软件，不能仅仅提供TP场景数据库。AP对于大数据解决方案有重要意义，所以引入新的AP数据库以及新的技术是十分必要的。",
    "update_time": "2021-04-17 20:47:36",
    "label": "210010010",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DV25?from=project-issue",
    "tech_tag": ["ClickHouse"],
    "domain_tag": ["OS", "数据库"],
    "outputRequirement": ["创建ClickHouse软件仓库，完成RPM打包，并提交对应Spec文件，", "完成ClickHouse服务全量功能测试，保证服务正常可用，运行基准测试及性能测试，并数据验证报告。"],
    "techRequirement": ["了解ClickHouse开源数据库。", "熟悉C/C++编译构建工具。", "熟悉RPM出包流程。"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "构建openEuler开发者用户画像",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "钟君",
    "contact": "<jun.zhongjun@huawei.com>",
    "student_count": 0,
    "description": "用户画像是指根据用户的属性、用户偏好、开发习惯、用户行为等信息而抽象出来的标签化用户模型。通俗说就是给用户打标签，而标签是通过对用户信息分析而来的高度精炼的特征标识。通过打标签可以利用一些高度概括、容易理解的特征来描述用户，可以让人更容易理解用户，并且可以方便计算机处理。\r\n\r\n开源用户画像包括对开发者基本信息、开发者历史贡献信息、社区信息、开发者的其他爱好以及擅长的技术技能等信息的专属于开发者的标签化用户模型。\r\n\r\n其中开发者基本信息包括开发者gitee id、开发者参与项目列表、邮箱等；开发者历史贡献信息包括开发者在代码托管平台提交的issue、pull request、评论、fork仓库等贡献信息。\r\n\r\n构建开发者用户画像，通过开发者特性模型建立，识别开发者特征，识别潜在个人及团队明星开发者。分析开发者行为，实现精细化运营",
    "update_time": "2021-04-17 20:49:47",
    "label": "210010011",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3DV26?from=project-issue",
    "tech_tag": ["openEuler。开源度量"],
    "domain_tag": ["OS"],
    "outputRequirement": ["用户画像标记体系建立", "开发者特性建模", "开发者关系图谱", "核心开发者看板", "开发者行为看板"],
    "techRequirement": ["了解linux 操作系统", "了解大数据分析系统spark相关", "熟悉java、python", "了解基本模型分析、特征工程等", "了解k8s"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "为openEuler社区提供一个FAQ的web服务",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "曹志",
    "contact": "<george.cao@huawei.com>",
    "student_count": 0,
    "description": "概要：使用python进行web编程，实现一个FAQ的web服务，后期可集成到openEuler主页。\r\n背景：随着openEuler社区逐渐壮大，参与者越来越多，前期参与者遇到的一些问题需要及时的存档并得以传递；社区当前只提供博客这种形式做为经验传递的载体，希望能实现一套FAQ来承载一些问题的处理经验。\r\n基础功能：提供新增FAQ条目、内容提交保存（包括文本和图片）、敏感信息扫描、邮件通知审查人、确认发布等基础功能接口。\r\n附加功能：访问统计预埋，点击排名，搜索功能。",
    "update_time": "2021-04-20 18:19:58",
    "label": "210010028",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python"],
    "domain_tag": ["开源基础社区"],
    "outputRequirement": ["使用Python实现一个web服务，提供新增内容编辑，内容扫描，内容展示，和简单查询功能。"],
    "techRequirement": ["了解python web服务编程", "了解FAQ系统大致功能和流程"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "开源软件版本演进中的License冲突检测",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "李自",
    "contact": "<lizi4@huawei.com>",
    "student_count": 0,
    "description": "开源软件虽然可以在网络上公开免费下载，但使用开源软件必须遵循开源License的要求，例如开发者静态链接了GPL类License的开源软件，按照License条款的要求，作者自研的代码也要对外开源，对于那些希望闭源代码构建产品的开发者来说，这显然是有风险的。我们希望通过工具自动化检测不同开源软件版本中License条款的变化，并将诸如“不允许商用”、“必须开源”、“不允许在云服务中使用”等风险进行标识并形成报告。",
    "update_time": "2021-04-17 20:51:31",
    "label": "210010029",
    "student_name": "",
    "wiki": "",
    "link": "https://gitee.com/openeuler-competition/summer-2021/issues/I3E2PG?from=project-issue",
    "tech_tag": ["License", "openEuler"],
    "domain_tag": ["开源合规"],
    "outputRequirement": ["输出开源软件版本间License冲突检测工具，能够识别不同开源软件版本间license的异同（包括是否可商用、是否要求对外开源、是否可在云服务集成）", "输出openEuler开源软件版本间License冲突报告。报告示例（以elasticsearch软件包为例，以下分析结果仅供参考，最终结论以律师专业结论为准）： http://https://shimo.im/sheets/9kKTPPyHGtqhxcvv/MODOC/"],
    "techRequirement": ["熟悉使用go/python语言进行开发", "熟练使用mysql等数据库进行数据读写", "熟悉文本文件、字符串操作", "对开源软件license有一些了解"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "开发基于freerdp 的 openeuler rdp 连接桌面应用",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "叶青龙",
    "contact": "<yeqinglong@uniontech.com>",
    "student_count": 0,
    "description": "目前大家的工作生活中，依旧有大量的Windows主机。当切换至国产操作系统后，需要提供一种工具来连接Windows主机。本题的要求是基于freerdp开发Windows连接桌面应用。桌面为openEuler DDE桌面。",
    "update_time": "2021-04-20 18:20:17",
    "label": "210010030",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["DDE桌面"],
    "domain_tag": ["OS"],
    "outputRequirement": ["产出一个界面友好的桌面应用，可以连接Windows主机，产品形态可参考Microsoft Remote Desktop client."],
    "techRequirement": ["了解linux 操作系统", "了解freerdp", "了解桌面应用", "c、c++/qt、python/pyqt"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "开发iso刻录DDE桌面应用",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "叶青龙",
    "contact": "<yeqinglong@uniontech.com>",
    "student_count": 0,
    "description": "日常工作中，需要把iso镜像刻录至u盘或光盘上。要求编写一个类似UltraISO软碟通的openEuler DDE桌面应用。可以完成iso刻录至u盘。",
    "update_time": "2021-04-20 18:20:39",
    "label": "210010031",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "DDE桌面，openEuler"],
    "domain_tag": ["OS"],
    "outputRequirement": ["产出一个界面友好的iso刻录桌面应用，产品形态参考UltraISO"],
    "techRequirement": ["了解linux 操作系统", "了解桌面应用", "有一定的 c++/qt、python/pyqt、c 基础"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "开发DDE桌面上基于 rpm 的软件包安装器",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "叶青龙",
    "contact": "<yeqinglong@uniontech.com>",
    "student_count": 0,
    "description": "开发一个软件包安装器，用户在DDE桌面上点一下rpm包，就可以完成rpm包安装。不需要再使用命令去安装rpm包。",
    "update_time": "2021-04-20 18:20:57",
    "label": "210010032",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "DDE桌面，openEuler"],
    "domain_tag": ["OS"],
    "outputRequirement": ["软件安装器可以通过鼠标点击打开rpm包，选择继续安装。", "软件安装器应用打开之后，可以选择打开的文件。产品形态可参考deepin软件安装器。"],
    "techRequirement": ["了解linux 操作系统", "了解桌面应用", "了解 c++/qt、pthon/pyqt、c"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "为openEuler社区适配开源的学之思在线考试系统",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "魏东",
    "contact": "<weidong@uniontech.com>",
    "student_count": 0,
    "description": "学习考试系统可以录入openEuler的教学课程。方便初学者了解安装使用openEuler操作系统。也方便初学者验证自己对openEuler的掌握情况。\r\n要求迁移学之思在线考试系统到openEuler操作系统",
    "update_time": "2021-04-20 18:21:08",
    "label": "210010033",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "DDE桌面，openEuler"],
    "domain_tag": ["OS"],
    "outputRequirement": ["在openEuler上可以通过yum快速安装学之思考试系统", "在openeuler DDE桌面可以通过浏览器登陆访问考试系统"],
    "techRequirement": ["了解linux", "熟悉rpm打包", "熟悉JavaScript，node，vue"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "linux内核的维测工具page owner增强",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "刘勇强",
    "contact": "<liuyongqiang13@huwei.com>",
    "student_count": 0,
    "description": "page_owner是一个linux内核的维测工具，用于跟踪页的分配，常用于定位linux内核内存泄漏问题[1]。本项目希望利用page_owner统计各个进程的占用物理页的统计信息并根据SLUB,CMA等分类。并且利用tools/vm/page_owner_sort.c 做特性增强。",
    "update_time": "2021-04-20 18:21:16",
    "label": "210010034",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "系统维测"],
    "domain_tag": ["Linux Kernel", "OS"],
    "outputRequirement": ["基于openEuler 21.03 (k5.10)，在x86和arm64架构下均能够统计各个进程的占用物理页的统计信息", "并且根据分配器的种类(SLUB/CMA等)进行分类", "将结果输出到当前目录文档中"],
    "techRequirement": ["了解linux操作系统以及内核", "熟悉linux内存管理"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "树莓派, 移动终端等资源受限场景KSM性能优化",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "樊成阳",
    "contact": "<cy.fan@huawei.com>",
    "student_count": 0,
    "description": "KSM全称Kernel SamePage Merging, 用于将内容相同页面进行合并, 从而减少页面冗余. 当前KSM对内存的扫描与比较会占用cpu资源, 如果想达到较好的去重效果, 将会导致CPU使用率过高. 这对于树莓派, 移动设备等资源受限设备来说会增加功耗, 影响性能, 变得无法接受. 因此需要在限制CPU的情况下保证KSM的去重效率, 从而提高系统内存的利用率.",
    "update_time": "2021-04-20 18:21:31",
    "label": "210010035",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "KSM"],
    "domain_tag": ["Linux Kernel", "OS"],
    "outputRequirement": ["达到稳定状态时去重量不低于原有KSM的90%", "相较于原有KSM方案的CPU占用率应该降低50%以上", "达到稳定时CPU的使用时间提升20%以上"],
    "techRequirement": ["了解linux操作系统", "熟悉linux内存管理", "熟悉KSM"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "pud/pmd-level mremap特性回合并支持risc-v架构",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "刘世鑫",
    "contact": "<liushixin2@huawei.com>",
    "student_count": 0,
    "description": "在Linux内核中，虚拟地址和物理地址通过多级页表建立映射，以四级页表为例，分别称为pgd、pud、pmd、pte。mremap模块用于对虚拟地址进行重新映射，扩大（或缩小）原来的内存映射。在mremap时需要重新建立新虚拟地址与物理地址的映射，这个过程需要一个页一个页的修改pte项，非常耗时。\r\n当前Linux主线版本中x86/arm架构下支持pud/pmd-level mremap，即不修改pte项，只修改pud/pmd项。\r\n\r\n目标 ：\r\n首先需要将该特性补丁集合入openeuler版本中，该补丁集中同时包含功能测试代码，可用于验证。\r\n之后实现在risc-v架构下的pmd-level mremap特性支持。",
    "update_time": "2021-04-20 18:21:42",
    "label": "210010036",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "risc-v"],
    "domain_tag": ["Linux Kernel", "OS"],
    "outputRequirement": ["在x86/arm/risc-v架构下通过补丁集中测试代码用例。（risc-v架构下不要求pud-level mremap）"],
    "techRequirement": ["了解Linux内核的基础知识", "了解多级页表的概念及其在x86/arm/risc-v架构下的实现"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "RISC-V栈回溯增强",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "陈煌",
    "contact": "<chenhuang5@huawei.com>",
    "student_count": 0,
    "description": "目前riscv的函数调用栈信息在Linux上使能CONFIG_FRAME_POINTER以及不使能在CONFIG_FRAME_POINTER情况都存在打印信息残缺。存在残缺信息的主要场景包括：1. 内核的dump test module，复现方法：跑driver/misc/lkdtm下的测试用例；2. proc接口下的打印信息，复现方法包括但不限于：echo t &gt; /proc/sysrq-trigger, cat /proc/1/stack 3.内核维测模块的打印信息，复现方法如：cat /sys/kernel/debug/page_owner等。可以通过跟其他架构下的打印信息进行比较来进行验证。",
    "update_time": "2021-04-20 18:22:01",
    "label": "210010043",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["RISC-V"],
    "domain_tag": ["OS"],
    "outputRequirement": ["可以通过上述复现方法，打印出正确的栈信息，该栈信息可以通过手动查看函数的调用过程，或者借助于ftrace工具。", "向Linux申请提交补丁来进行解决遇到的问题。"],
    "techRequirement": ["熟悉Linux 内核", ".熟悉程序内存布局和栈帧原理"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "为risc-v架构添加透明大页THP特性支持",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "孙南勇",
    "contact": "<sunnanyong@huawei.com>",
    "student_count": 0,
    "description": "当前内核中riscv架构尚未实现透明大页特性，根据RISC-V特权架构的定义，为Linux内核RISC-V架构添加透明大页THP的支持。\r\n\r\n透明大页介绍：在Linux 操作系统上运行内存需求量较大的应用程序时，由于其采用的默认页面大小为4KB，因而将会产生较多TLB Miss 和缺页中断，从而大大影响应用程序的性能。 当操作系统以2MB 甚至更大作为分页的单位时，将会大大减少TLB Miss 和缺页中断的数量，显著提高应用程序的性能。传统大页很难手动管理, 而且通常需要对代码进行重大更改才能有效地使用。因此后来引入了透明大页(THP)。THP 是一个抽象层, 可以自动创建、管理和使用传统大页。标准大页管理是预分配的方式，而透明大页管理则是动态分配的方式，且不需要修改程序源码。",
    "update_time": "2021-04-20 18:22:11",
    "label": "210010044",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["RISC-V"],
    "domain_tag": ["OS"],
    "outputRequirement": ["基于openEuler 21.03 分支(内核版本5.10)生成内核补丁，完成对riscv架构的THP支持，基于X86平台，在riscv qemu虚拟机上调通THP相关功能，包括THP的申请、使用、释放"],
    "techRequirement": ["熟悉内核内存管理、RISCV页表机制"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "实现RISCV架构下支持qspinlock",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "童甜根",
    "contact": "<tongtiangen@huawei.com>",
    "student_count": 0,
    "description": "当前Linux主线版本中RISCV架构下spinlock的实现是cas spinlock, 相比于qspinlock, cas spinlock存在如下问题：\r\n1、无序竞争，不保证先申请就一定能先获取到锁，在处理器拓补结构中临近自旋锁拥有者的处理器可能会更快地刷新缓存，因而增大获得自旋锁的机率。\r\n2、由于每个申请自旋锁的线程均在同一个全局变量上忙等待，系统总线将因为处理器间的缓存同步而导致繁重的流量，从而降低了系统整体的性能。\r\n因此我们可以通过对RISCV架构支持qspinlock以提升相关场景下的性能。",
    "update_time": "2021-04-20 18:22:20",
    "label": "210010045",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "RISC-V"],
    "domain_tag": ["OS"],
    "outputRequirement": ["在RISCV架构下使能qspinlock，并通过spinlock测试用例。"],
    "techRequirement": ["了解Linux内核的基础知识。", "了解锁与原子操作基础知识。"],
    "orgID": 1,
    "isApproved": 1
  }, {
    "name": "基于 Linux Lab 搭建 openEuler 内核开发环境",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "谢秀奇",
    "contact": "<xiexiuqi@huawei.com>",
    "student_count": 0,
    "description": "Linux Lab 是一套用于 Linux 内核学习、开发和测试的即时实验室，可以极速搭建和使用，功能强大，用法简单！本题目要求基于 Linux Lab 搭建 openEuler 内核的开发环境。",
    "update_time": "2021-04-20 18:22:31",
    "label": "210010046",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "openEuler"],
    "domain_tag": ["Linux Kernel", "OS"],
    "outputRequirement": ["基本要求：  基于 Linux Lab v0.6, 完成 openEuler 21.03 内核开发环境的搭建 Host OS 不限 要求完成基于 Linux Lab 提供的虚拟开发板搭建开发环境，至少搭建 aarch64 和 x86_64 的环境； 在开发环境上可以编译安装和启动内核 输出指导手册和示例，发表在 openEuler 社区", "扩展要求：  搭建 riscv 的开发环境 使用 openEuler 20.03 SP1 做 Host OS 搭建开发环境 使用 openEuler 搭建的开发环境信息反馈到 Linux Lab 开源社区 使用搭建好的内核开发环境，编译验证1个补丁，并将其提交到 openEuler kernel 社区"],
    "techRequirement": ["了解linux 操作系统", "熟悉Linux内核"],
    "orgID": 1,
    "isApproved": 1
  }]
},
{
  "anchor": "debian",
  "slide": "",
  "video": "",
  "img": "debian.jpg",
  "title": "The Debian Project||The Debian Project",
  "project_url": "",
  "url": "https://www.debian.org",
  "description": "通用操作系统社区||The Universal Operating System",
  "full_des": "由 Ian Murdock 创立于1993年，Debian致力于成为一个真正的自由软件社区项目。在随后的近30年中，Debian成为了全球最大也最具影响力的开源项目之一。来自全世界的数以万计的开发者汇聚于此，开发了支持 70 余种语言、支持海量计算设备的“通用操作系统”。||The Debian Project was founded in 1993 by Ian Murdock to be a truly free community project. Since then the project has grown to be one of the largest and most influential open source projects.  Thousands of volunteers from all over the world work together to create and maintain Debian software. Available in 70 languages, and supporting a huge range of computer types, Debian calls itself the universal operating system.",
  "tech_tag": [
    "OS Linux"
  ],
  "domain_tag": [
    "操作系统",
    "软件集成"
  ],
  "mail_list": "1) 全球社区开发人员邮件列表 https://lists.debian.org/debian-devel/",
  "email": "debian-outreach@lists.debian.org",
  "project_list": []
},
{
  "userId": 149,
  "anchor": "kubesphere",
  "slide": "",
  "video": "",
  "img": "kubesphere.jpg",
  "title": "KubeSphere 开源社区||KubeSphere Community",
  "project_url": "",
  "url": "https://kubesphere.io/",
  "description": "一款开源的 Kubernetes 发行版容器平台||Enterprise-grade container platform tailored for multicloud and multi-cluster management",
  "full_des": "<a href=\"https://kubesphere.io/\" target=\"_blank\" >KubeSphere</a>是在<a href=\"https://https://kubernetes.io/\" target=\"_blank\" >Kubernetes</a>之上构建的面向云原生应用的分布式操作系统，完全开源，支持多云与多集群管理，提供全栈的 IT 自动化运维能力，简化企业的 DevOps 工作流。它的架构可以非常方便地使第三方应用与云原生生态组件进行即插即用 (plug-and-play) 的集成。||<a href=\"https://kubesphere.io/\" target=\"_blank\" >KubeSphere</a> is a distributed operating system providing cloud native stack with <a href=\"https://https://kubernetes.io/\" target=\"_blank\" >Kubernetes</a> as its kernel, and aims to be plug-and-play architecture for third-party applications seamless integration to boost its ecosystem. KubeSphere is also a multi-tenant enterprise-grade container platform with full-stack automated IT operation and streamlined DevOps workflows.",
  "tech_tag": [
    "Kubernetes",
    "DevOps",
    "ServiceMesh",
    "Golang",
    "Prometheus",
    "Docker"
  ],
  "domain_tag": [
    "云原生",
    "可观察性",
    "容器云",
    "微服务",
    "多云管理"
  ],
  "mail_list": "kubesphere@googlegroups.com",
  "email": "kubesphere@gmail.com",
  "project_list": []
},
{
  "userId":357,
  "anchor": "opencurve",
  "slide": "",
  "video": "",
  "img": "curve.jpg",
  "title": "Curve社区||Curve社区",
  "project_url": "",
  "url": "https://www.opencurve.io/",
  "description": "高性能、高可用、高可靠分布式存储系统||A  High-performance, high-availability, and high-reliability distributed storage system",
  "full_des": "CURVE是网易自主设计研发的高性能、高可用、高可靠分布式存储系统，具有非常良好的扩展性。基于该存储底座可以打造适用于不同应用场景的存储系统，如块存储、对象存储、云原生数据库等。当前我们基于CURVE已经实现了高性能块存储系统，支持快照克隆和恢复 ,支持QEMU虚拟机和物理机NBD设备两种挂载方式, 在网易内部作为高性能云盘使用。||CURVE is a distributed storage system designed and developed independently by NetEase, featured with high performance, high availability, high reliability and well expansibility, and it can serve as the basis for storage systems designed for different scenario (e.g. block storage, object storage and cloud database).    So far, we have implemented a high performance block storage system, which supports snapshot, clone and recovery, and it can be attached to QEMU virtual machine or physical machine (by curve-nbd). CURVE has been served as an elastic block storage service inside NetEase for a certain time, during which high performance and reliability have shown.",
  "tech_tag": [
    "distributed",
    "block storage",
    "high performance"
  ],
  "domain_tag": [
    "高性能分布式存储"
  ],
  "mail_list": "Wang Pan, <hzwangpan@corp.netease.com>, @aspirer",
  "email": "storage_mgm@163.com](mailto:storage_mgm@163.com)",
  "project_list": []
},
{
  "userId": 328,
  "anchor": "bookos",
  "slide": "",
  "video": "",
  "img": "bookos.jpg",
  "title": "Bookos",
  "project_url": "",
  "url": "https://www.book",
  "description": "一个开源、免费的在大学校园里很活跃的操作系统，有操作系统内核，也有图形化的界面。",
  "full_des": "Bookos是一个培养中国青少年操作系统人才的社区，社区是有组织的运营的。主要是引导对操作系统感兴趣的高中生和大学生系统的学习的操作系统，从感兴趣难入门，到能在大学实现一个简单的操作系统，社区由胡自成负责bookos的技术和代码开发，李石亮负责引导喜爱底层的大学生做系统性的学习引导从算法，简单的程序结构，到简单的操作系统实现。万晓兰老师负责经济上的支持。到目前为止，有核心的社区人员30-40人，比较松散的成员有80人左右，更松散的qq群有700人。核心的社区人员其中8人都实现过简单的操作系统。开发的主要工作是由胡自成等5人完成，其他核心成员一起讨论技术问题，提供企业的信息，给出实现的建议。李石亮和万晓兰负责解决学生中的困难和就业上的困难，让他们安心的学习底层的技术，做到学习底层和就业两方面不耽误。",
  "tech_tag": [
    "操作系统",
    "Git",
    "GCC",
    "内核"
  ],
  "domain_tag": [
    "操作系统",
    "内核",
    "人才的培养"
  ],
  "mail_list": "公共邮箱",
  "email": "2323168280@qq.com 胡自成",
  "project_list": []
},
{
  "anchor": "webcell",
  "slide": "",
  "video": "",
  "img": "webcell.jpg",
  "title": "WebCell||WebCell",
  "project_url": "",
  "url": "https://web",
  "description": "基于 TypeScript 和 JSX 的轻量级 Web 标准组件框架||Lightweight Web standard component framework based on TypeScript and JSX",
  "full_des": "关注、研究、推广原生的 Web 标准技术，让互联网应用的开发、使用更简洁、普适~||Lightweight Web standard component framework based on TypeScript and JSX",
  "tech_tag": [
    "Web",
    "HTTP",
    "HTML",
    "CSS",
    "JavaScript",
    "TypeScript"
  ],
  "domain_tag": [
    "Web 前后端开发"
  ],
  "mail_list": "",
  "email": "",
  "project_list": []
},
{
  "userId": 306,
  "anchor": "piflow",
  "slide": "",
  "video": "",
  "img": "piflow.jpg",
  "title": "大数据流水线系统PiFlow",
  "project_url": "",
  "url": "https://github.com/cas-bigdatalab/piflow",
  "description": "大数据流水线管理与调度系统",
  "full_des": "PiFlow是一款基于分布式计算Spark开发的大数据流水线系统，以所见即所得的简洁方式，实现大数据采集、处理、存储与分析流程化配置、运行与智能监控，提供了100+的标准化数据处理组件， 包括Hadoop 、Spark、MLlib、Hive、Solr、Redis等。支持面向领域、灵活的二次组件开发。具备亿级数据的ETL处理能力，性能优越，支持数据溯源。同步开源在github/gitee社区。获GVP-码云最有价值开源项目奖、首届\"中国开源软件创意大赛\"二等奖。目前已应用至6家企业中，场景包括大数据处理框架、数据资产管理、医疗健康大数据、机器学习、知识图谱构建等。",
  "tech_tag": [
    "Scala",
    "Java",
    "Python",
    "Maven",
    "Git"
  ],
  "domain_tag": [
    "大数据处理",
    "流水线",
    "调度",
    "机器学习"
  ],
  "mail_list": "",
  "email": "",
  "project_list": []
}, {

  "userId": 248,
  "anchor": "wechaty",
  "slide": "",
  "video": "",
  "img": "wechaty.jpg",
  "title": "Wechaty 社区||Wechaty",
  "project_url": "",
  "url": "https://wechaty.js.org/",
  "description": "Wechaty is a Conversational RPA SDK for Chatbot Makers to build WeChat and Whatsapp bots with ease.",
  "full_des": "Conversational RPA SDK Wechaty 是一个开源聊天机器人框架SDK，于 2016 年发布于 GitHub，是一个基于 Apache-2.0 许可证的开源项目，具有高度封装、高可用的特性，支持 NodeJs,  Python,  Go 和 Java 等多语言版本。\n 经过4年多的发展，现在 Wechaty 开源社区已经拥有数十位 Committers，百余位 Contributors ，并被近万名 GitHub 开发者 Star 。使用 Wechaty 的开发者已覆盖数万人，并拥有基于微信群的数千人活跃开发者群。Wechaty 社区的 Contributors 遍布全球多个国家地区，和各大互联网公司，职业背景从程序员到设计师，从大学教授到创业者，非常多样化。GitHub 上有千余个开源项目基于 Wechaty 构建了聊天机器人，这些开发者用户也极大地促进了社区的活跃和发展。\nWechaty自身对代码质量的管理，使用了 GitHub Actions 的 DevOps 工具完成了 CI/CD 工作流，从自动化单元测试到自动打包集成测试，从自动发布 NPM 包到自动构建和发布对应版本的 Docker Image ，实现了全自动的社区代码发布，极大的提高了社区的协同效率。在开源社区管理上，Wechaty 遵循 The Apache Way ，拥有 PMC / Committer 管理制度，和完善的 Issue / PR / Release 等管理制度。\n截止2020年，Wechaty 已经有超百万次 NPM 安装下载，并由社区自发推动了 Python, Go, Java, Scala, CSharp, PHP 等语言的适配和发布，是国内最活跃的 Conversational AI Chatbot 开发者社区。Wechaty 支持的功能包括：接收消息，发送消息、添加好友、为好友备注、接受好友请求、发起群聊、加人入群等功能。只需要6行代码，你就可以 通过个人号 搭建一个 微信机器人功能 ，用来自动管理微信消息。\n更多功能包括：\n消息处理：关键词回复\n群管理：自动入群，拉人，踢人\n自动处理好友请求\n智能对话：通过简单配置，即可加入智能对话系统，完成指定任务||Wechaty is a Conversational RPA SDK for chatbot makers that can create a bot in 6 lines of code with the most popular IMs like WeChat, Whatsapp, WeCom, Gitter, etc.\nLong Description (may include limited Markdown up to 2000 characters):Wechaty is a Conversational RPA (Robotic Process Automation) SDK for Chatbot Makers which can create a bot in 6 lines of JavaScript, Python, Go, Java, .NET, PHP, and Scala, with cross-platform support including Linux, Windows, macOS, and Docker, on top of the most popular IMs like WeChat, Whatsapp, WeCom, Gitter, etc.",
  "tech_tag": [
    "Conversational",
    "AI",
    "RPA",
    "NLP",
    "TypeScript",
    "Python",
    "MachineLearning",
    "DeepLearning",
    "Docker",
    "DevOps",
    "Node.js"
  ],
  "domain_tag": [
    "Chatbot",
    "Conversational AI",
    "NLP"
  ],
  "mail_list": "wechaty@googlegroups.com,Gitter: https://gitter.im/wechaty/wechaty",
  "email": "wechaty@chatie.io",
  "project_list": []
},
{
  "anchor": "kaiyuanshe",
  "slide": "",
  "video": "",
  "img": "kaiyuanshe.jpg",
  "title": "开源社||Kaiyuanshe",
  "project_url": "",
  "url": "https://kaiyuanshe.cn/",
  "description": "开源社是由国内外支持开源的社区、个人及企业，依“贡献，共识，共治”原则，所组织的厂商中立、纯志愿者、非营利的开源联盟，旨在共创健康可持续发展的开源生态体系，并推动中国开源社区成为全球开源软件的积极参与及贡献者。我们专注于开源治理、国际接轨、社区发展和开源项目。|| Kaiyuanshe is a vendor-neutral, volunteer-only, non-profit alliance of domestic and international open source communities, individuals and enterprises, based on the principle of \"Contribute, Consensus, Govern\", to create a healthy and sustainable Open-source ecosystem and promote the Chinese Open-source community as an active participant and contributor to global open-source software. We focus on Open-source governance, international alignment, community development and Open-source projects. These descriptions will be displayed on the organization list page (Short Description) and on your organization's page.",
  "full_des": "开源社是由国内外支持开源的社区、个人及企业，依“贡献，共识，共治”原则，所组织的厂商中立、纯志愿者、非营利的开源联盟，旨在共创健康可持续发展的开源生态体系，并推动中国开源社区成为全球开源软件的积极参与及贡献者。我们专注于开源治理、国际接轨、社区发展和开源项目。https://kaiyuanshe.cn/profile/about/|| Kaiyuanshe is a vendor-neutral, volunteer-only, non-profit alliance of domestic and international open source communities, individuals and enterprises, based on the principle of \"Contribute, Consensus, Govern\", to create a healthy and sustainable Open-source ecosystem and promote the Chinese Open-source community as an active participant and contributor to global open-source software. We focus on Open-source governance, international alignment, community development and Open-source projects. These descriptions will be displayed on the organization list page (Short Description) and on your organization's page.\nhttps://kaiyuanshe.cn/profile/about/",
  "tech_tag": [
    "开源社区",
    "公益组织",
    "Open-source community",
    "Public interest organization"
  ],
  "domain_tag": [
    "开源治理",
    "社区发展",
    "国际接轨",
    "开源项目",
    "Open Source Governance",
    "Community Development",
    "International Connections",
    "Open Source Projects"
  ],
  "mail_list": "",
  "email": "admin@kaiyuanshe.org",
  "project_list": []
},
{
  "userId": 296,
  "anchor": "nebulagraph",
  "slide": "",
  "video": "",
  "img": "nebulagraph.jpg",
  "title": "Nebula Graph||Nebula Graph",
  "project_url": "",
  "url": "https://nebula-graph.com.cn",
  "description": "开源分布式图数据库||An open-source distributed graph database. High throughput with low latency.",
  "full_des": "Nebula Graph 是一款开源的图数据库，擅长处理千亿顶点和万亿条边的超大规模数据集，同时保持毫秒级延时。Nebula Graph 于 2019 年 5 月开源，目前迭代至 2.0 版本，已经有多家互联网头部企业用于实时推荐、风险控制、机器学习等场景。||Nebula Graph is an open-source distributed graph database capable of hosting super large scale graphs with dozens of billions of vertices (nodes) and trillions of edges, with milliseconds of latency. It was open sourced in May 2019 and the most recent version is v2.0. Nebula Graph has been adopted by dozens of huge Internet companies for various scenarios such as real-time recommendations, fraud detection, and machine learning.",
  "tech_tag": [
    "分布式",
    "数据库",
    "图数据库",
    "C++",
    "图计算",
    "Linux"
  ],
  "domain_tag": [
    "图数据库",
    "分布式系统"
  ],
  "mail_list": "暂无，可以通过 GitHub Issues 跟社区沟通",
  "email": "info@vesoft.com",
  "project_list": []
},
{
  "anchor": "tinylab",
  "slide": "",
  "video": "",
  "img": "tinylab.jpg",
  "title": "泰晓科技||Tiny Lab",
  "project_url": "",
  "url": "http://tinylab.org",
  "description": "泰晓科技是一个知名公益性 Linux 技术社区 —— 聚焦 Linux，追本溯源，见微知著！|| Tiny Lab is a public Chinese Linux community, focus on Linux kernel and embedded Linux system!",
  "full_des": "泰晓科技是一个知名公益性 Linux 技术社区，创立于 2010 年，长期聚焦 Linux 系统技术交流和产品实践，追本溯源，见微知著，致力于推动业界创造更极致的 Linux 产品。|| Tiny Lab is a public Chinese Linux community, founded in 2010, focus on Linux kernel and embedded Linux system, especially about product practice, committed to promote the industry to develop better Linux products.",
  "tech_tag": [
    "Linux Lab",
    "技术交流",
    "产品实践",
    "Linux"
  ],
  "domain_tag": [
    "Linux 内核",
    "Linux 实验环境",
    "实时系统",
    "系统优化"
  ],
  "mail_list": "http://tinylab.org/about    ",
  "email": "contact@tinylab.org",
  "project_list": []
},
{
  "userId": 160,
  "anchor": "aosc",
  "slide": "",
  "video": "",
  "img": "aosc.jpg",
  "title": "安同开源社区||Anthon Open Source Community",
  "project_url": "",
  "url": " https://aosc.io/",
  "description": "AOSC 是围绕 Linux 发行版 AOSC OS 形成的开源社区。",
  "full_des": "安同开源社区（Anthon Open Source Community, 简称 AOSC）是围绕社区项目 AOSC OS 形成的开源社区。AOSC OS 是一款遵循简约、本地化、包容、可持续及精制原则独立开发的通用 Linux 发行版，致力于改善开源软件的使用体验。",
  "tech_tag": [
    "内核",
    "RISC-V",
    "嵌入式",
    "Linux",
    "阿里平头哥 (T-Head)",
    "Rust",
    "C",
    "Python",
    "Bash",
    "GTK",
    "本地化 (L10n)",
    "Dpkg 包管理"
  ],
  "domain_tag": [
    "Linux 发行版",
    "中文本地化"
  ],
  "mail_list": " discussions@lists.aosc.io ",
  "email": " discussions@lists.aosc.io",
  "project_list": [{
    "name": "全志 RISC-V 芯片主线化开发工作【Allwinner RISC-V Chip Mainline Development】",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "郑兴达",
    "contact": "<icenowy@aosc.io>",
    "student_count": 0,
    "description": "全志即将推出一款基于 XuanTie C906 RISC-V 核心的 SoC 。本项目将对该芯片进行启动固件（暂定为 U-Boot ，可根据学生兴趣换用其他方案）和 Linux 内核的主线化开发工作。 该芯片将于 4 月下旬发布，随后将发布官方开发板、SDK 及文档；本项目的开发过程中需要大量参考 SDK 代码。\r\n\r\nAllwinner will soon release an SoC based on the XuanTie C906 RISC-V core. This project will focus on mainlining the bootloader (tentatively U-Boot, may switch according to student interest) and Linux Kernel for this chip. The chip will be released in late April, with the official development board, SDK and documentation to follow. A lot of references to the SDK code will be needed for the development of this project.",
    "update_time": "2021-04-20 19:15:45",
    "label": "210080041",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "C", "Git", "RISC-V，XuanTie，U-Boot"],
    "domain_tag": ["Linux Kernel"],
    "outputRequirement": ["完成该芯片的基本 bootloader 功能，能够启动 Linux 内核，并将相关代码提交给上游。", "完成该芯片的基本 Linux 移植，可以从 MMC 启动现成 Linux 发行版并在串口进行输入 / 输出。", "视完成情况实现各种外设的驱动。"],
    "techRequirement": ["编译交叉工具链（可使用现成工具）和内核。", "使用 Git 代码管理（使用 commit, rebase 等操作）。", "编写 C 语言代码（能参照现有内核代码编写新设备的驱动代码）。", "使用英语与上游项目或社区交流（编写提交信息 [commit message]，在邮件列表上接受补丁审阅 [patch review]，如果有必要的时候面对 Linus Torvalds 或其他上游维护者的愤怒）。", "了解 RISC-V 指令集（能看懂 GCC 输出的汇编代码）。"],
    "orgID": 8,
    "isApproved": 1
  }, {
    "name": "半自动软件包退休、封存与整理系统",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "张顺然",
    "contact": "<staph@aosc.io>",
    "student_count": 0,
    "description": "软件包更新在现代社会已经不再是什么稀奇事。每天，无数软件包获得更新，有些是修复漏洞，有些是增加功能，还有些是性能优化等等。 由于系统的软件包仓库由业余爱好者维护，这些被更新的包渐渐积累，成为了维护负担。 然而这些老包亦有分析价值。如果将过去的软件包收集起来，线下储存，可以用于未来的分析等活动。 因此我们设立了该项目，用于退休、封存与整理老软件包。",
    "update_time": "2021-04-20 19:16:02",
    "label": "210080042",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Python", "Database", "Stroage", "Bash"],
    "domain_tag": ["Dev Tools"],
    "outputRequirement": ["提供一个程序用于查询哪些软件源中的包可以被封存，哪些由于已封存，可以直接丢弃，哪些应当留在仓库中。", "提供一个程序用于封存软件包：移除以及分类归纳为指定大小（目前为 &lt; 25GiB）的档案夹，可能的话，最终生成 Blu-ray ISO。", "提供一个较高效率的方式，可以方便的使用程式查询所有已封存软件包资讯。", "（如有额外时间）提供一个方式生成“最小软件仓库”，仅包含最新版本的软件包，占用最少的空间。"],
    "techRequirement": ["能够阅读英文文档（语言官方文档 / API 等）。", "熟练使用一种语言（建议 Python）的字符串处理功能。", "熟练使用一种语言（建议 Python / Bash）的文件系统处理功能。", "了解使用该语言访问网路 API 以取得文字的功能。", "了解并可简单使用一种数据库（建议 SQLite）。", "使用较少的依赖，便于在源服务器上（无 root 的 CLI）快速部署与执行。", "尽量做到无人工介入完成包退休封存与整理工作。", "软件包查询可以使用很少系统资源与响应时间完成。"],
    "orgID": 8,
    "isApproved": 1
  }, {
    "name": "安装程序 DeployKit 的实现【Implementation of DeployKit】",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "刘子兴",
    "contact": "<liushuyu@aosc.io>",
    "student_count": 0,
    "description": "社区项目 DeployKit 是未来 AOSC OS 的安装和恢复程序。该程序有两种模式：作为安装向导指引用户正确地安装 AOSC OS、作为系统备份/恢复工具，提供预防性备份和灾难恢复功能。目前，DeployKit 使用 Cursive 和 Rust 编程语言基本实现了安装向导的命令行用户界面（TUI）和其后端的库，但尚未实现安装向导的图形界面部分。本项目的目标是按照社区提供的 AOSC OS 安装指引，将这部分原本需要手动操作的安装流程实现到 DeployKit 上。\r\n\r\nDeployKit is the proposed installer for AOSC OS. The program should have two operating modes: helping the user to install AOSC OS as an installer, and providing preventive back-up and disaster recovery functionalities. At present, a very basic TUI interface has been implemented using Cursive and the Rust Programming Language. However, a GUI interface is still yet to be implemented. The goal of this project is to provide an installer implementation that follows the AOSC OS Installation Guide and automates all installation steps.",
    "update_time": "2021-04-20 17:48:01",
    "label": "210080100",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Linux", "C", "C++", "Rust", "GTK"],
    "domain_tag": ["Software", "Operating System"],
    "outputRequirement": ["实现 DeployKit 的图形用户界面", "完善安装器后端库的逻辑和错误处理", "实现安装过程在图形用户界面上的可视化（进度展示）"],
    "techRequirement": ["了解基本的 Linux 命令", "熟悉 Rust 或类似的系统编程语言，如 C 或 C++", "熟悉 Rust 的外部函数调用机制（FFI）以及 unsafe 的处理", "了解 GObject、GLib 和 GTK 编程（注：GTK/GLib API 文档可能不详细，已经熟悉 GTK 3 API 的学生优先）", "注：项目假设参与学生在报名时已对“项目技术要求”部分前三个技术较为熟悉"],
    "orgID": 8,
    "isApproved": 1
  }]
},
{
  "userId":155,
  "anchor": "gooderp",
  "slide": "",
  "video": "",
  "img": "gooderp.jpg",
  "title": "GoodERP开源俱乐部",
  "project_url": "",
  "url": "http://www.gooderp.org/",
  "description": "俱乐部会员以众筹和众包的开源协作形式完善和推广GoodERP产品并提供相关服务",
  "full_des": "面向年营业额在2千万到2亿元的增长型企业，需要按需定制的信息化系统支撑业务稳步增长，GoodERP是一款开源ERP软件，具备财务、人事、项目、采购、销售、库存等核心功能。不同于现有市场的套装软件或云软件，GoodERP不限用户数，模块化二次开发，源码和数据自主掌控，是开源专业化IT服务的载体。",
  "tech_tag": [
    "Python3",
    "Postgresql",
    "xml",
    "jquery"
  ],
  "domain_tag": [
    "ERP 企业管理软件"
  ],
  "mail_list": "",
  "email": "jeff@osbzr.com",
  "project_list": []
},
{
  "userId": 162,
  "anchor": "eduoj",
  "slide": "",
  "video": "",
  "img": "eduoj.jpg",
  "title": "EduOJ",
  "project_url": "",
  "url": "https://github.com/EduOJ",
  "description": "一个面向程序设计和算法教学的在线评测系统。",
  "full_des": "EduOJ 是一个面向高中、大学的程序设计课程和数据结构与算法课程的在线评测系统。和其他开源 OJ 相比，提供了更为灵活的作业设置、分数统计等面向教学而非竞赛练习的功能。拓展性强，可支持Special Judge、多文件评测等拓展功能。",
  "tech_tag": ["Go", "JavaScript", "Distributed System", "Database", "Stroage", "Vue，"],
  "domain_tag": ["Distributed System", "Web", "Programming Language"],
  "mail_list": "  eduoj@googlegroups.com",
  "email": "i@leoleoasd.me",
  "project_list": [{
    "name": "邮件通知/验证系统",
    "diffll": 0,
    "difficulty": "低",
    "mentor": "卢雨轩",
    "contact": "<luyuxuanleo+eduoj@gmail.com>",
    "student_count": 0,
    "description": "现在OJ注册时输入的邮箱仅用于登录，缺失邮件验证/邮件通知/邮件重置密码等功能。\r\n请调研并比较邮件相关库/HTML模板库，实现一个注册时邮件验证/邮件通知/邮件重置密码功能。\r\n\r\n参考：\r\nhttps://github.com/go-gomail/gomail\r\nhttps://github.com/go-mail/mail",
    "update_time": "2021-04-20 19:09:17",
    "label": "210110012",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Go", "HTML，SMTP"],
    "domain_tag": ["Web", "Programming Language"],
    "outputRequirement": ["注册时（可配置是否要求）邮件认证", "邮件重置密码", "基于现有的Event/Hook系统，实现邮件通知功能"],
    "techRequirement": ["代码测试覆盖率70%以上", "命名/文档/注释复合社区规范"],
    "orgID": 11,
    "isApproved": 1
  }]
},
{
  "userId": 169,
  "anchor": "bjlkjxgs",
  "video": "",
  "img": "oneflow.jpg",
  "title": "OneFlow",
  "project_url": "",
  "url": "www.oneflow.org",
  "description": "OneFlow 是一个专注性能的深度学习框架",
  "full_des": "OneFlow 是一个专注性能的深度学习框架，期待对分布式机器学习有兴趣的开发者加入，共同将 OneFlow 打造成世界一流的 AI 基础设施。",
  "tech_tag": [
    "ML",
    "distributed"
  ],
  "domain_tag": [
    "深度学习"
  ],
  "mail_list": "https://github.com/Oneflow-Inc/oneflow/issues",
  "email": "contact@oneflow.org",
  "project_list": [{
    "name": "将 OneFlow 中的 CommNet 模块抽取为独立工程",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "李新奇",
    "contact": "<lixinqi@oneflow.org>",
    "student_count": 0,
    "description": "CommNet 模块是 OneFlow 的底层通信模块。用于分布式训练时节点与节点之间的通信。\r\nCommNet 采用了多种设计模式及优化技巧保证其底层协议的可扩展性及传输的高效性。CommNet 是纯异步且对深度学习最友好的高效网络传输模块。目前底层支持 RDMA 或者 epoll 方式，并且可以很方便地扩展底层通信方式。\r\n由于 CommNet 模块易扩展、性能高效、协议简单等特性，不少项目希望将 CommNet 嵌入进自己的系统中用于网络通信。\r\n在这个项目中，我们将从 OneFlow 中把 CommNet 抽取出来，作为一个独立工程，贡献给开源社区。",
    "update_time": "2021-04-20 19:14:13",
    "label": "210130121",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["C++", "Git"],
    "domain_tag": ["OS", "Distributed System"],
    "outputRequirement": ["将CommNet独立为工程，附带能正常构建的CMake文件", "CommNet 的接口文档"],
    "techRequirement": ["一定的 C++ 代码阅读能力", "对 CMake、Makefile 有一定了解", "能在导师的指导下学习和理解项目中涉及的常见的设计模式"],
    "orgID": 13,
    "isApproved": 1
  }, {
    "name": "实现 einsum 算子",
    "diffll": 2,
    "difficulty": "高",
    "mentor": "蔡晟航",
    "contact": "<caishenghang@oneflow.org>",
    "student_count": 0,
    "description": "einsum 是一个强大又有趣的算子。OneFlow 目前还没有这个算子。如果尝试在 OneFlow 中添加这个算子，你不仅可以熟悉 OneFlow 的 Python 前端如何与 C++ 后端交互、掌握 CUDA 编程、深入体会 OneFlow 发明的 SBP 等概念如何在分布式训练中大显神威，还可以了解词法、语法分析等与编译有关的知识并立即应用在这个项目中。",
    "update_time": "2021-04-20 19:14:26",
    "label": "210130122",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["C++"],
    "domain_tag": ["AI", "Distributed System"],
    "outputRequirement": ["einsum 算子的 Python 前端", "einsum 算子的 CUDA Kernel", "einsum 算子的 CPU Kernel", "einsum 的接口文档", "einsum 的 Op 代码", "einsum 所需要的简单语法解析器"],
    "techRequirement": ["熟练掌握 Python", "熟练掌握 C++", "能够在导师的指导下学习编译原理相关知识并实现相关的词法、语法分析等功能", "能在导师的指导下学习CUDA编程并实现 CUDA Kernel", "对计算优化和高性能计算库有一定了解或有兴趣了解"],
    "orgID": 13,
    "isApproved": 1
  }]
},
{
  "userId": 161,
  "anchor": "postgresql",
  "slide": "",
  "video": "",
  "img": "postgresql.jpg",
  "title": "中国开源软件推进联盟PostgreSQL分会",
  "project_url": "",
  "url": "https://www.postgresqlchina.com/",
  "description": "构建PostgreSQL技术生态，推动PostgreSQL产学研用发展",
  "full_des": "PostgreSQL是世界排名第一的的开源关系型数据库，采用BSD开源协议。PostgreSQL是学术性开源技术，上世纪80年代由加州大学伯克利分校Michael Stonebraker（图灵奖获得者）创造的Postgres软件包发展而来，多年来保持稳定迭代。PostgreSQL主体不受任何国家、机构、企业及商业组织控制与主导，发展与管理全部由PostgreSQL国际开源社区掌握。中国开源软件推进联盟PostgreSQL分会作为国内唯一的具有独立法人主体的PostgreSQL行业协会组织，承担着构建PostgreSQL产业生态，推动PostgreSQL产学研用发展的责任。",
  "tech_tag": ["C", "Database"],
  "domain_tag": ["Database Management System"],
  "mail_list": "partner@postgresqlchina.com",
  "email": "partner@postgresqlchina.com",
  "project_list": [{
    "name": "Oracle数据库到PostgreSQL数据库迁移转换持续集成",
    "diffll": 1,
    "difficulty": "中",
    "mentor": "彭冲",
    "contact": "<pcsuccess@sina.com>",
    "student_count": 0,
    "description": "Oracle数据库里结构对象迁移到PostgreSQL，数据库对象包括表、视图、同义词、物化视图、函数、存储过程、包及包体等",
    "update_time": "2021-04-20 19:15:24",
    "label": "210240086",
    "student_name": "",
    "wiki": "",
    "link": "",
    "tech_tag": ["Java", "Database", "Docker"],
    "domain_tag": ["Dev Tools"],
    "outputRequirement": ["结合现有开源工具如pgloader、ora2pg等进行部分迁移转化工作", "使用程序实现不兼容性的迁移转化工作"],
    "techRequirement": ["Java、shell、SQL或js、Web前端等"],
    "orgID": 24,
    "isApproved": 1
  }]
},
{
  "userId": 277,
  "anchor": "milvus",
  "slide": "",
  "video": "",
  "img": "milvus.jpg",
  "title": "Milvus",
  "project_url": "",
  "url": "https://www.milvus.io/",
  "description": "Milvus 是一款开源的特征向量相似度搜索引擎",
  "full_des": "Milvus 是一款开源的特征向量相似度搜索引擎，具有使用方便、实用可靠、易于扩展、稳定高效和搜索迅速等特点。Milvus 已经被广泛应用于多个领域，其中包括图像处理、机器视觉、自然语言处理、语音识别、推荐系统以及新药发现等。",
  "tech_tag": [
    "深度学习 ",
    "计算机视觉",
    "NLP",
    "语音识别",
    "向量数据库"
  ],
  "domain_tag": [
    "非结构化数据处理"
  ],
  "mail_list": "https://lists.lfaidata.foundation/g/milvus-technical-discuss",
  "email": "community@zilliz.com",
  "project_list": []
},
{
  "userId": 153,
  "anchor": "volcano",
  "slide": "",
  "video": "",
  "img": "volcano.jpg",
  "title": "Volcano",
  "project_url": "",
  "url": "https://volcano.sh/zh/",
  "description": "Volcano是业界首个云原生高性能批量计算项目，旨在面向AI、大数据、科学计算、渲染等高性能计算场景提供丰富的调度策略、主流北向计算框架和多元南向算力支持。",
  "full_des": "Volcano是基于Kubernetes的云原生批量计算引擎，它补齐了Kubernetes在面向AI、大数据、高性能计算等批量计算任务调度、编排等场景下的短板，向下支持鲲鹏、昇腾、X86等多元算力，向上使能TensorFlow、Spark、华为MindSpore等主流行业计算框架，让数据科学家和算法工程师充分享受到云原生技术所带来的高效计算与极致体验。Volcano于2019年6月开源，2020年4月正式成为CNCF首个高性能批量计算项目。截止目前，Volcano社区已聚集了开发者180+、收获star 1.6K+，已知用户30+，生态伙伴来自华为、百度、腾讯、滴滴、京东、AWS、爱奇艺、小红书、建信金融科技、BOSS直聘、趣头条、中科类脑、锐天投资等多家行业TOP企业。",
  "tech_tag": ["Go", "Cloud Native", "Container", "AI", "Distributed System", "Kubernetes"],
  "domain_tag": ["AI", "Cloud Native", "Big Data", "Container", "Scheduling"],
  "mail_list": "https://groups.google.com/forum/#!forum/volcano-sh",
  "email": "volcano.sh.bot@gmail.com",
  "project_list": []
},

{
  "userId":366,
  "anchor": "apacheecharts",
  "slide": "",
  "video": "",
  "img": "echarts.jpg",
  "title": "Apache ECharts",
  "project_url": "",
  "url": "https://echarts.apache.org/",
  "description": "Apache ECharts 是一个使用 JavaScript 实现的开源可视化库。",
  "full_des": "Apache ECharts 是一个使用 JavaScript 实现的开源可视化库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器，提供直观，交互丰富，可高度个性化定制的数据可视化图表。",
  "tech_tag": [
    "Dataviz",
    "Canvas",
    "SVG",
    "TypeScript"
  ],
  "domain_tag": [
    "可视化"
  ],
  "mail_list": "dev@echarts.apache.org",
  "email": "dev@echarts.apache.org",
  "project_list": []
},
{
  "userId": 320,
  "anchor": "apachecarbondata",
  "slide": "",
  "video": "",
  "img": "apachecarbondata.jpg",
  "title": "Apache CarbonData",
  "project_url": "",
  "url": "http://carbondata.apache.org/",
  "description": "CarbonData是一个大数据开源项目，2017年正式成为ASF开源顶级项目。",
  "full_des": "CarbonData是一种新的高性能数据存储格式，已在20+企业生产环境上部署和使应用，企业数据规模达到万亿。针对当前大数据领域分析场景需求各异而导致的存储冗余问题，业务驱动下的数据分析灵活性要求越来越高，CarbonData提供了一种新的融合数据存储方案，以一份数据同时支持多种应用场景，并通过多级索引、字典编码、预聚合、动态Partition、准实时数据查询、列存等特性提升了IO扫描和计算性能，实现百亿数据级秒级响应。",
  "tech_tag": [
    "big-data",
    "data-store"
  ],
  "domain_tag": [
    "大数据",
    "数据存储",
    "数据格式"
  ],
  "mail_list": "dev@carbondata.apache.org",
  "email": "chenliang613@apache.org (PMC Chair's mail) 或者发邮件给dev@carbondata.apache.org",
  "project_list": []
},
{
  "userId": 158,
  "anchor": "dubbogo",
  "slide": "",
  "video": "",
  "img": "dubbo.jpg",
  "title": "dubbo-go 社区",
  "project_url": "",
  "url": "https://github.com/apache/dubbo-go",
  "description": "Dubbo-go 架起 Dubbo 和 go 之间的桥梁，带领Java生态享受云原生时代的技术红利。 ",
  "full_des": "Apache Dubbo Go 语言实现，架起java和go之间的桥梁，与 gRPC/Spring Cloud 生态互联互通，带领Java生态享受云原生时代的技术红利。",
  "tech_tag": [
    "分布式",
    "Go",
    "微服务"
  ],
  "domain_tag": [
    "微服务治理",
    "云原生"
  ],
  "mail_list": "dev@dubbo.apache.org",
  "email": "dev@dubbo.apache.org",
  "project_list": []
},
{
  "userId": 276,
  "anchor": "tdengine",
  "slide": "",
  "video": "",
  "img": "tdengine.jpg",
  "title": "TDengine",
  "project_url": "",
  "url": "https://www.taosdata.com/",
  "description": "TDengine是涛思数据专为物联网、车联网、工业互联网、IT运维等设计和优化的大数据平台。||TDengine is an open-source big data platform designed and optimized for Internet of Things (IoT), Connected Vehicles, and Industrial IoT.",
  "full_des": "北京涛思数据科技有限公司(TAOS Data) 瞄准日益增长的物联网数据市场，专注时序空间大数据的存储、查询、分析和计算。不依赖任何开源或第三方软件，开发了拥有自主知识产权、自主可控的高性能、可伸缩、高可靠、零管理的物联网大数据平台TDengine，可广泛运用于物联网、车联网、工业互联网、IT运维等领域。公司已经申请多项技术发明专利，且全部提交PCT专利申请。涛思数据采用AGPL许可证，已经将TDengine的内核(存储和计算引擎)以及社区版100%开源。涛思数据将尽最大努力打造开发者社区，维护这个开源的商业模式，相信不将最核心的代码开源，任何软件都将无法赢得市场。涛思数据希望通过开源，快速获得市场反馈，完善产品，完善生态，而且吸引更多的开发者加入到这个项目中。||To address the technology challenges in the exponential growth of connected devices, TAOS Data is aimed at building a big data platform for Internet of Things (IoT). With a deep understanding of data characteristics of the IoT, TAOS Data has designed an innovative way to collect, store, compute, and analyze time-series data. Its flagship product, TDengine, outperforms other time-series databases by at least 10 times in terms of insert/query performance.TDengine’s kernel (storage and computing engine) and community edition are 100% open-sourced under the AGPL license. TAOS Data is fully committed to maintaining this open development model and believes that no software will win the market unless its core functionalities are fully open.",
  "tech_tag": [
    "分布式计算",
    "大数据处理",
    "高性能存储",
    "流式计算"
  ],
  "domain_tag": [
    "物联网",
    "大数据",
    "IT运维",
    "工业互联网",
    "车联网"
  ],
  "mail_list": "tdengine@taosdata.com; support@taosdata.com; xtzang@taosdata.com; sdsang@taosdata.com",
  "email": "tdengine@taosdata.com",
  "project_list": []
},
{
  "userId": 166,
  "anchor": "youqilin",
  "slide": "",
  "video": "",
  "img": "youqilin.jpg",
  "title": "优麒麟社区",
  "project_url": "",
  "url": "https://www.ubuntukylin.com",
  "description": "优麒麟是 Ubuntu 的官方衍生发行版本之一。 ",
  "full_des": "优麒麟（Ubuntu Kylin）是由中国 CCN（由CSIP、Canonical、NUDT三方联合组建）开源创新联合实验室与麒麟软件有限公司主导开发的全球开源项目，其宗旨是通过研发用户友好的桌面环境以及特定需求的应用软件，为全球 Linux 桌面用户带来非凡的全新体验！优麒麟开源操作系统自2013年创建至今，已累计发行16个版本，下载量超过3200万次，向开源社区贡献代码数百万行，被 Linux、Debian、Ubuntu、OpenStack、Ceph等国际开源社区接收的 patch 超过 7000 个，在全球范围内拥有数十万活跃用户。",
  "tech_tag": [
    "Linux",
    "Desktop Environment",
    "桌面环境"
  ],
  "domain_tag": [
    "Linux Native 应用",
    "Linux 桌面环境"
  ],
  "mail_list": "ubuntukylin-members@lists.launchpad.net",
  "email": "contact@ubuntukylin.com",
  "project_list": []
},
{
  "userId": 177,
  "anchor": "codenameone",
  "slide": "",
  "video": "",
  "img": "codenameone.jpg",
  "title": "Codename One",
  "project_url": "",
  "url": "https://github.com/codenameone/CodenameOne",
  "description": "Codename One is a mobile first cross platform environment for Java and Kotlin developers. It can compile Java bytecode to native OS executables (iOS, Android, UWP etc.). It's a complete mobile platform featuring virtual machines, simulator, design tools (visual theme/builder/css), IDE integrations, ports to multiple OS's and much more. It provides full access to the underlying native OS code (e.g. Objective-C, C#, Dalvik/ART) through a portable abstraction which enables 100% code reuse.",
  "full_des": "Codename One is the only platform that... Has Write Once Run Anywhere support with no special hardware requirements and 100% code reuse Compiles Java or Kotlin into native code for iOS, UWP (Universal Windows Platform), Android and even JavaScript (with seamless PWA and Thread support) Is Easy to use with 100% portable Drag and Drop GUI builder Has Full access to underlying native OS capabilities using the native OS programming language (e.g. Objective-C) without compromising portability Has full control over every pixel on the screen! Just override paint and draw or use a glass pane to draw anywhere... Lets you use native widgets (views) and mix them with Codename One components within the same hierarchy (heavyweight/lightweight mixing) Supports seamless Continuous Integration out of the box",
  "tech_tag": [
    "JVM",
    "Java",
    "Cross Platform",
    "Mobile",
    "JDWP",
    "Accessibility"
  ],
  "domain_tag": [
    "Mobile",
    "Java",
    "Kotlin",
    "iOS",
    "Android",
    "UWP",
    "WORA",
    "JVM"
  ],
  "mail_list": "https://groups.google.com/g/codenameone-discussions We plan to launch a slack group for developers as well",
  "email": "",
  "project_list": []
},
{
  "userId": 176,
  "anchor": "sofastack",
  "slide": "",
  "video": "",
  "img": "sofastack.jpg",
  "title": "SOFAStack 社区||SOFAStack Community",
  "project_url": "",
  "url": "https://sofastack.tech/",
  "description": "一套用于快速构建金融级云原生架构的中间件||A collection of middleware components designed to build financial-level distributed architecture",
  "full_des": "SOFAStack™（Scalable Open Financial Architecture Stack）是一套用于快速构建金融级云原生架构的中间件，也是在金融场景里锤炼出来的最佳实践，并且具备以下特点：开放：技术栈全面开源共建、 保持社区中立、兼容社区 兼容开源生态，组件可插拔， SOFAStack 组件与其它开源组件可相互集成或替换;金融级：包含构建金融级云原生架构所需的各个组件，让用户更加专注于业务开发，满足用户场景的现状和未来需求，经历过大规模场景的锤炼，特别是严苛的金融场景;云原生：基于 SOFAStack 可快速搭建云原生微服务体系，快速开发更具可靠性和扩展性、更加易于维护的云原生应用||SOFAStack™（Scalable Open Financial Architecture Stack）is a collection of middleware components designed to build financial-level distributed architecture and is also the best practice fully validated in financial scenarios. It has several features:Open: Buildpack is fully open-source, keeps community neutral and is compatible with community. SOFAStack components are pluggable and compatible with the open-source ecosystem, so they can be integrated or replaced with other open-source components.Financial-grade: Contains the components needed to build a financial-level cloud native architecture, which have been fully tempered in large-scale scenarios, especially harsh financial scenarios, thus enabling developers to focus more on service development and meeting the current and future needs of user scenarios.Cloud Native: Based on SOFAStack, you can quickly build a cloud-native microservice system and develop cloud-native applications that are more reliable, scalable, and easier to maintain.",
  "tech_tag": [
    "Golang",
    "Java",
    "云原生"
  ],
  "domain_tag": [
    "微服务",
    "中间件"
  ],
  "mail_list": "sofa@alipay.cloud.com",
  "email": "sofa@alipay.cloud.com",
  "project_list": []
},
{
  "userId": 211,
  "anchor": "chaoss",
  "slide": "",
  "video": "",
  "img": "chaoss.jpg",
  "title": "CHAOSS",
  "orgTypeDesc": "开源社区",
  "orgType": 1,
  "project_url": "",
  "url": "https://chaoss.community/",
  "description": "一个专注于创建和分析指标，来帮助定义社区健康的开源项目",
  "full_des": "CHAOSS 是 Linux 基金会的一个开源项目，项目社区的工作主要围绕软件和指标。此外，还提供软件和实践来支持 CHAOSS 指标的应用和部署。",
  "tech_tag": ["Python", "Database", "Automation", "Git"],
  "domain_tag": ["Vitualization", "Community", " Metrics", " Governance"],
  "mail_list": "CHAOSS@lists.linuxfoundation.org",
  "email": "CHAOSS@lists.linuxfoundation.org",
  "project_list": []
},
{
  "userId": 205,
  "anchor": "dokit",
  "slide": "",
  "video": "",
  "img": "dokit.jpg",
  "title": "DoKit",
  "orgTypeDesc": "开源社区",
  "orgType": 1,
  "project_url": "",
  "url": "https://www.dokit.cn",
  "description": "一款面向泛前端产品研发全生命周期的效率平台。",
  "full_des": "DoKit诞生于滴滴城运服泛前端终端技术部，是一款面向泛前端产品研发全生命周期的效率平台。经过两年的发展，当前DoKit已经发展成了一个相对完整的生态，比如DoKit For Android、DoKit For iOS、DoKit For 小程序、DoKit For Flutter、DoKit For Web。同时我们的项目被BAT以及滴滴、字节、快手、京东等等头部独角兽企业广泛使用并获得良好的口碑。随着dokit.cn平台端的推出，标志着DoKit已经从单纯的效率工具正式进入了效率工具平台的阶段。与此同时我们一直都未停下持续探索的精神，积极地在更多平台领域进行尝试，不给自己设限。我们相信DoKit的未来充满无限可能。",
  "tech_tag": ["Java", "JavaScript", "OC", "Kotlin", "Swift"],
  "domain_tag": ["Dev Tools", "Web", "终端"],
  "mail_list": "暂无",
  "email": "dokit@didiglobal.com",
  "project_list": []
}, {
  "userId": 298,
  "anchor": "julia",
  "slide": "",
  "video": "",
  "img": "julia.jpg",
  "title": "Julia中文社区",
  "orgTypeDesc": "开源社区",
  "orgType": 1,
  "project_url": "",
  "url": "https://discourse.juliacn.com/",
  "description": "致力于为 Julia 编程语言提供中文支持的开源组织。",
  "full_des": "Julia中文社区致力于为Julia编程语言提供更好的中文支持，帮助中文用户学习、交流和分享Julia的使用经验，促进Julia编程语言在科学计算等领域的广泛应用。",
  "tech_tag": ["AI", "Deep Learning Framework", "Julia"],
  "domain_tag": ["AI", "Big Data", "Dev Tools", "Vitualization", "Distributed System", "Programming Language"],
  "mail_list": "",
  "email": "juliacn@googlegroups.com",
  "project_list": []
}, {
  "userId": 249,
  "anchor": "hyportrons",
  "slide": "",
  "video": "",
  "img": "hyportrons.jpg",
  "title": "Hypertrons",
  "orgTypeDesc": "开源社区",
  "orgType": 1,
  "project_url": "",
  "url": "https://hypertrons.io",
  "description": "面向开放组织的开源 RPA 平台",
  "full_des": "Hypertrons 为一个面向开放组织的开源 RPA 平台，在多种平台的连通下，通过可定制化脚本为开放组织提供组织架构管理、自动化流程管理等。目前已经支持 GitHub、GitLab、Gitee、Jenkins、Slack、email 等多种平台的交互。",
  "tech_tag": ["NodeJS", "Automation", "RPA"],
  "domain_tag": ["开源治理", "跨平台自动化"],
  "mail_list": "frank_zsy@hypertrons.io wsl@hypertrons.io lhming23@outlook.com",
  "email": "dev@hypertrons.io",
  "project_list": []
}, {
  "anchor": "masknetwork",
  "slide": "",
  "video": "",
  "img": "mask.jpg",
  "title": "Mask Network",
  "orgTypeDesc": "开源社区",
  "orgType": 1,
  "project_url": "",
  "url": "https://mask.io",
  "description": "Mask Network 致力于以开源与去中心化的方式夺回用户自身数据的所有权。",
  "full_des": "Mask Network 是一个帮助用户从 Web 2.0 无缝过渡到 Web 3.0 的门户。其提供的主要功能是对信息传输进行加解密，并围绕着这一功能不断发展。Mask Network 倡导用户珍视自己的隐私数据，个人资产并拥有主权。Mask Network 集去隐私社交，无国界支付网络，去中心化文件存储与分享，去中心化金融，治理（DAO）、NFT 于一体，帮助用户在 Twitter、Facebook 等传统社交网络上保护自身的隐私，数据，资产和权利。Mask Network 创建了一个去中心化的应用程序生态系统，为数以万计的用户搭建了一个连接 Web 2.0（现有互联网）和 Web 3.0（新型开放的互联网）的桥梁。",
  "tech_tag": ["前端", "iOS", "Android", "区块链"],
  "domain_tag": ["浏览器插件", "React", "Web App", "推特客户端", "移动输入法", "智能合约"],
  "mail_list": "",
  "email": "info@mask.io",
  "project_list": []
}, {
	"userId": 269,
	"anchor": "universaloj",
	"slide": "",
	"video": "",
	"img": "uoj.png",
	"title": "Universal OJ 开源社区",
	"orgTypeDesc": "开源社区",
	"orgType": 1,
	"project_url": "",
	"url": "https://github.com/UniversalOJ",
	"description": "一款通用的在线评测系统。",
	"full_des": "Universal OJ 开源社区是以吕凯风 vfleaking 开发的 UOJ 为基础的二次开发社群；Universal OJ 开源社区专注于对算法题目的评测，为学习算法提供便利。",
	"tech_tag": ["Linux", "Python", "C", "PHP", "C++", "Git", "Docker"],
	"domain_tag": ["Web"],
	"mail_list": "billchenchina2001@gmail.com",
	"email": "QQ 群 560621197 / Telegram @uojos",
	"project_list": []
}, {
	"userId": 283,
	"anchor": "datenlord",
	"slide": "",
	"video": "",
	"img": "datenlord.png",
	"title": "DatenLord",
	"orgTypeDesc": "开源社区",
	"orgType": 1,
	"project_url": "",
	"url": "https://datenlord.io",
	"description": "DatenLord是新一代云原生分布式存储，专门解决异构、多云场景下数据统一存储管理的问题。 DatenLord由来自多名Google、华为的资深工程师发起，采用软硬结合的方式实现高性能存储。目前，DatenLord大量采用内核旁路、硬件加速等底层技术，诸如io_uring、RDMA、SerDes等软硬件技术手段，实现存储性能的十倍以上提升。",
	"full_des": "存储是非常有技术挑战的领域，非常典型的软硬结合的技术领域，其难度堪比操作系统内核，不亚于芯片的研发难度。DatenLordd的主要技术亮点如下： 1、DatenLord采用全新自研架构，绕过操作系统内核，自主控制存储IO，极大地发挥出新一代存储硬件的高性能。目前存储硬件的革新正在驱动存储软件架构升级。闪存硬盘日趋流行，非易失内存的出现，使得现有操作系统内核里对存储的管理变成存储性能瓶颈。DatenLord采用异步编程架构并绕过操作系统内核，实现完全不依赖内核，自主调度管理存储IO，极大地提升了存储的性能。 2、DatenLord提供统一的存储接口，满足不同场景需求。目前存储领域存在多种异构存储接口，包括文件存储、对象存储、块存储等，分别满足不同场景存储需求。但是不同的存储接口需要应用来适配，对应用最友好的是文件存储，但是文件存储的容量有限，无法线性扩展，迁移困难。对海量数据管理最友好的是对象存储，但是应用需要适配对象存储的接口。块存储是为虚拟化场景提供存储支持，应用不能直接访问。DatenLord整合多种存储接口，在面向应用时提供文件存储，在面向跨云数据管理时提供对象存储，在对接虚拟化场景时提供块存储，并实现数据对多个存储接口的互通。 3、DatenLord利用片上系统提升存储性能。片上系统是目前硬件和云计算领域最热门的技术之一，采用硬件芯片来完成特定场景的计算任务。DatenLord采用FPGA可编程芯片和ASIC专用芯片实现存储场景的相关计算功能，诸如数据加密解密、数据压缩解压缩、音视频编解码、模式识别等场景，有力提升数据存储和处理的性能。",
	"tech_tag": ["Linux Kernel","Cloud Native","Distributed System","Storage"],
	"domain_tag": ["Linux","Distributed System","Rust","Kubernetes","RDMA","FPGA"],
	"mail_list": "",
	"email": "dev@datenlord.io",
	"project_list": []
}, {
	"userId": 256,
	"anchor": "hgbczxjt",
	"slide": "",
	"video": "",
	"img": "hebi.png",
	"title": "合璧操作系统",
	"orgTypeDesc": "公司",
	"orgType": 3,
	"project_url": "",
	"url": "https://hybridos.fmsoft.cn/",
	"description": "合璧操作系统 HybridOS 是一个为智能物联网设备和云计算环境设计的全新开源操作系统。",
	"full_des": "相较于运行在单机硬件环境中的传统操作系统，合璧操作系统 HybridOS 尝试为开发者提供更多可能。HybridOS 不仅仅为支持物联网应用的开发而运行在设备侧，同时也为客户端和云计算提供了编程接口。HybridOS 尝试为开发者提供一个从设备到云端再到客户端的全新软件栈和协议栈。",
	"tech_tag": ["Linux", "C", "RTOS", "C++", "IoT"],
	"domain_tag": ["OS", "嵌入式软件开发，开源社区"],
	"mail_list": "",
	"email": "summer2021@minigui.com",
	"project_list": []
}, {
	"userId": 270,
	"anchor": "linux",
	"slide": "",
	"video": "",
	"img": "lug@ustc.png",
	"title": "中科大学生 Linux 用户协会",
	"orgTypeDesc": "开源社区",
	"orgType": 1,
	"project_url": "",
	"url": "https://lug.ustc.edu.cn/",
	"description": "科⼤的⼀个技术类、Linux/⾃由软件社团",
	"full_des": "中国科学技术大学学生 Linux 用户协会（科大 LUG）是由在校的 GNU/Linux 爱好者发起并组成的全校性群众团体，是一个以推广自由软件文化、宣传自由软件价值为目的的协会组织",
	"tech_tag": ["Go", "Linux", "Python", "JavaScript", "Container", "NodeJS", "React", "Rust", "TypeScript", "Stroage", "Git", "Docker"],
	"domain_tag": ["Linux Kernel", "OS", "Container", "Web", "Mirrors"],
	"mail_list": "ustc_lug@googlegroups.com",
	"email": "lug@ustc.edu.cn",
	"project_list": []
}, {
	"userId": 279,
	"anchor": "longgui",
	"slide": "",
	"video": "",
	"img": "longgui.png",
	"title": "龙归科技",
	"orgTypeDesc": "开源社区",
	"orgType": 1,
	"project_url": "",
	"url": "https://www.longguikeji.com/home",
	"description": "北京「龙归科技」是一个专注于低代码赋能企业级信息化服务提供商。核心创始人团队来自绿盟安全、红帽开源操作系统、知名游戏玩蟹科技、知名开源社区等专家共同创立。 ArkID 方舟一账通：是一个开源 IDaaS 框架，基于 Vue + Django 框架，插件化、多租户、支持多种认证协议",
	"full_des": "「龙归科技」致力于让中国每一个企业拥有专属的自动化办公操作系统，助力企业或政府拥抱（Cloud Native First）云原生优先战略，帮助客户构筑以「身份与应用」为中心的现代化 IT 基础设施！从而实现「企业数字化转型」及「软件行业工业化生产」 ！ 主打产品：ArkID 方舟一帐通，统一身份认证平台；ArkOS 方舟操作系统：一个企业级办公自动化操作系统，结合自研低代码应用开发平台，构建产业生态，专注为各类企业与组织机构打造一体化全栈云原生平台。系统自带应用包括：ArkID，ArkIDE，ArkPlatform，App Store 等产品。截至目前，公司已经获得 15个 软件著作权、2个 发明专利，并与2020年11月份，获得 北京海淀区中关村国家高新技术企业认定。 ArkID 方舟一账通：是一个开源 IDaaS 框架，基于 Vue + Django 框架，插件化、多租户、支持多种认证协议，如：OAuth 2.0、LDAP、SAML 2.0、OIDC 等。既可作为企业终端客户统一管理 CIAM，也可作为企业内部雇员、外部伙伴统一身份管理IAM。彻底告别企业内多系统、多账号的治理烦恼, 保障企业信息安全！ 聚焦在在数字政府一网通办、智慧教育、智慧医疗、智慧交通、金融科技、工业互联网-数字化转型等多系统账号体系打通场景！",
	"tech_tag": ["OS","Cloud Native","Container","Programming Language"],
	"domain_tag": ["Python","JavaScript","NodeJS","TypeScript","Automation","Git","Docker"],
	"mail_list": "",
	"email": "bd@longguikeji.com",
	"project_list": []
}







]